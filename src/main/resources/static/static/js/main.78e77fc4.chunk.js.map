{"version":3,"sources":["Layout.js","Progress.js","Encrypt.js","Locale.js","Authentication.js","API.js","pages/Login.js","pages/Demo/Plan/Dialog.js","pages/Message.js","pages/Menu.js","pages/Demo/Todo/View.js","pages/components/DateTime.js","pages/Demo/DateTime/View.js","pages/Demo/Plan/View.js","pages/Demo/Plan/Input.js","pages/components/FloatInput.js","pages/Demo/Floating/View.js","pages/components/Paging.js","pages/Demo/Paging/View.js","pages/Demo/Dialogs/Dialog.js","pages/Demo/Dialogs/View.js","pages/components/Organization.js","pages/components/Images.js","pages/Demo/Operation/View.js","pages/components/InputGroup.js","pages/UserSearch.js","pages/Demo/UserSearch/View.js","pages/Pages.js","reportWebVitals.js","index.js","Util.js","pages/components/Select.js","Dialog.js"],"names":["setMessageId","setMessages","setMessageType","setErrorDetail","changeTitle","setBreadcrumbs","logout","Logout","Redirect","path","undefined","global","location","href","process","ClearMessage","UnknownErrorMessage","detail","msg","JSON","stringify","WriteMessage","id","type","WriteErrorMessage","err","data","response","messageID","msgs","messages","result","withRouter","WrappedComponent","props","params","useParams","ChangeTitle","titleId","name","GetLabel","page","SetBreadcrumbs","crumbs","children","useState","messageId","messageIdFunc","messageType","messageTypeFunc","messagesFunc","title","setTitle","detailFunc","crumbsFunc","src","bg","Brand","className","onClick","map","val","idx","active","length","link","Item","variant","eventKey","Header","Body","inst","Progress","state","show","this","animation","React","Component","Show","setState","Hide","Encrypt","buf","bytes","AES","decrypt","SECRETKEY","parse","toString","CryptJS","enc","Utf8","obj","encrypt","selectMessages","locale","lang","Package","language","en","ja","zh","create","cache","createIntlCache","createIntl","changeLanguage","e","setLanguage","Locale","getLanguage","selectLang","remove","cookies","intl","set","get","value","formatMessage","Label","Message","GetLanguage","SetLanguage","SelectLanguage","languages","values","onChange","withCookies","noAuthenticationURLs","Authentication","urls","forEach","v","push","refreshReload","mouseMove","self","isAuthPage","refreshFunc","refreshTimer","console","log","Date","once","document","addEventListener","setInterval","clearTimeout","setTimeout","clientExpiry","pathname","Util","match","encode","Save","save","CreateJWT","session","Role","role","Array","isArray","permission","includes","ignore","LoginPage","RemoveSession","removeSession","Name","API","mock","jwt","instance","axios","headers","timeout","url","callback","caller","method","createInstance","ctx","request","then","catch","error","Promise","reject","finally","resp","mockMode","SpaceRow","Row","Col","xs","Login","handleLoginClick","userId","current","password","post","user","isUnknownError","status","expiry","handleUpdateClick","new1","newPassword1","new2","newPassword2","oldPassword","put","createRef","i","j","Form","Container","Group","Control","placeholder","ref","Button","to","Menu","gotoPlan","gotoDate","gotoToDo","gotoPaging","gotoFloat","gotoDialogs","gotoOperation","gotoUsers","Card","Title","Text","ToDo","addText","todos","add","bind","del","args","filter","x","ShowConfirm","delete","style","margin","ListGroup","as","marginTop","DateTime","showDay","showTime","step","empty","t","parseInt","day","hour","minute","getHours","getMinutes","styles","days","arr","Object","keys","date","rtn","zeroPadding","getFullYear","getMonth","getDate","hours","minutes","now","next","setMonth","dateFormat","customInput","highlightDates","selected","handleDay","minDate","maxDate","showDisabledMonthNavigation","Select","h","handleHour","m","handleMinute","DateView","d","dt","datetime","time","setStyles","PlanView","handleInput","target","nowString","places","plans","placeId","Table","slice","PlanInputDialog","handleShow","targetDate","handleClose","handleCommit","place","start","end","Modal","onHide","closeButton","defaultValue","Footer","PlanInput","details","formatTime","FloatInput","setValue","input","inputId","ID","handleInputFocus","handleDocumentClick","float","contains","firstShow","hide","removeEventListener","floatStyle","width","offsetWidth","zIndex","readOnly","onFocus","treeData","key","disableCheckbox","View","handleSelect","searchTree","treeInput","child","treeRef","minHeight","onSelect","defaultExpandedKeys","defaultSelectedKeys","Paging","handleClick","num","display","max","paging","currentPage","numberOfPage","last","indent","Math","floor","items","Pagination","prev","First","Prev","disabled","Next","Last","Time","handleTimezone","timezone","handleChange","viewTimes","handleInsert","zone","numberOfDisplay","times","handleClicked","p","limitValues","timezoneList","striped","bordered","size","dateToWithout","offsetToWith","Dialog","brightness","message","handleUpdate","backdrop","height","createObj","changeColor","updateCard","cards","elm","handleSingle","zz","clickCount","showDialog","ShowInformation","dialog","createClassName","base","Stack","direction","gap","Organization","tree","selectKey","setKey","getImageURL","home","homepage","proxy","getEndpoint","Images","alt","handleSearch","organization","org","operationList","workers","workersList","today","formatDate","handleDate","handleOrganization","operation","cols","elements","worker","userID","InputGroup","n","UserSearch","mode","checked","userName","belong","handleChangeDisplay","search","clear","idObj","nameObj","users","querySelector","querySelectorAll","getAttribute","func","check","getCheck","preventDefault","f","g","parentElement","dialogClassName","centerd","handleAllCheck","handleCheck","handlePageClick","UserSearchView","rowdata","DemoPages","element","createCrumbs","Page","indexOf","concat","useEffect","Pages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","basename","Layout","getElementById","len","join","pattern","strs","split","patterns","matchStringGlob","selectedIndex","options","vals","clazz","optionList","text","resolve","promise","handleYes","centered"],"mappings":"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","file":"static/js/main.78e77fc4.chunk.js","sourcesContent":["/**\r\n * @fileoverview \r\n * このファイルは共通的なレイアウトを提供します。\r\n * データファイルは\"locale-data\"に\"言語コード\".jsonで存在します。\r\n */\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet,HelmetProvider } from \"react-helmet-async\";\r\nimport {\r\n  Container,Navbar,Breadcrumb,\r\n  Alert,Accordion,Button\r\n} from 'react-bootstrap';\r\n\r\nimport Locale,{Label,Message,GetLabel} from \"./Locale\";\r\nimport Authentication from \"./Authentication\";\r\nimport Dialog from \"./Dialog\";\r\nimport Progress from \"./Progress\";\r\nimport {LoginPage,Name,Logout} from \"./Authentication\";\r\n\r\nimport \"./css/Main.css\"\r\n\r\nvar setMessageId;\r\nvar setMessages;\r\nvar setMessageType;\r\nvar setErrorDetail;\r\nvar changeTitle;\r\nvar setBreadcrumbs;\r\n\r\n/**\r\n * ログアウト\r\n * <pre>\r\n * 認証コンポーネントのログアウト機能を呼び出す\r\n * </pre>\r\n */\r\nfunction logout() {\r\n  Logout();\r\n}\r\n\r\n/**\r\n * レイアウトコンポーネント\r\n * <pre>\r\n * ページ共通のレイアウトと機能を提供する\r\n * タイトル変更 -> Helmetを利用\r\n * 認証機能 -> Authenticationを利用\r\n * 国際化機能 -> Localeを利用\r\n * ダイアログ（問い合わせ、情報）-> Dialogを利用\r\n * プログレス -> Progressを利用\r\n * </pre>\r\n * @param {element} children - 子ページ\r\n * @returns 共通レイアウトを持つページ\r\n */\r\nconst Layout = ({children}) => {\r\n\r\n  const [messageId,messageIdFunc] = useState(\"\");\r\n  const [messageType,messageTypeFunc] = useState(\"danger\");\r\n  const [messages,messagesFunc] = useState([]);\r\n\r\n  const [title,setTitle] = useState(\"Loading... PAS\")\r\n  const [detail,detailFunc] = useState(\"\");\r\n  const [crumbs,crumbsFunc] = useState([]);\r\n\r\n  setMessageId = messageIdFunc;\r\n  setMessageType = messageTypeFunc;\r\n  setErrorDetail = detailFunc;\r\n  setMessages = messagesFunc;\r\n  changeTitle = setTitle;\r\n  setBreadcrumbs = crumbsFunc;\r\n\r\n  return (<>\r\n\r\n<HelmetProvider>\r\n  <Helmet title={ title }>\r\n  <script src=\"/config.js\"></script>\r\n  </Helmet>\r\n</HelmetProvider>\r\n\r\n<Authentication />\r\n\r\n<Locale>\r\n\r\n  <Navbar bg=\"light\">\r\n    <Container>\r\n      <Navbar.Brand href={process.env.PUBLIC_URL + \"/pages/menu\"}>Demo</Navbar.Brand>\r\n      <LoginPage> \r\n        <div><Name/><br/>\r\n          <Button className=\"linkText\" onClick={logout}>ログアウト</Button>\r\n        </div>\r\n      </LoginPage>\r\n    </Container>\r\n  </Navbar>\r\n\r\n  <LoginPage> \r\n    <Breadcrumb className=\"Layout-Breadcrumbs\">\r\n      {crumbs.map( (val,idx) => {\r\n        var active = (idx+1 === crumbs.length);\r\n        var name = GetLabel(val.id);\r\n        var link = val.link;\r\n        return (\r\n          <Breadcrumb.Item active={active} key={\"breadcrumbs-\" + idx} href=\"#\"\r\n            onClick={() => Redirect(link)}>{name}</Breadcrumb.Item>\r\n        )\r\n      })}\r\n    </Breadcrumb>\r\n  </LoginPage>\r\n\r\n  <main>\r\n    {messageId !== \"\" &&\r\n      <Alert key=\"1\" variant={messageType}> \r\n        {messages.length === 0 &&\r\n          <Message id={messageId}/> \r\n        }\r\n        {messages.length !== 0 &&\r\n          <ul>\r\n            {messages.map( (msg,idx) => {\r\n              return <li key={idx}>{msg}</li>\r\n            })}\r\n          </ul>\r\n        }\r\n\r\n        {detail !== \"\" &&\r\n        <Accordion>\r\n          <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header className=\"Layout-SystemDetail\">\r\n              <Label id=\"PRFN00L000\"/> \r\n            </Accordion.Header>\r\n            <Accordion.Body>{detail}</Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n\r\n        }\r\n      </Alert>\r\n    }\r\n\r\n    {children}\r\n\r\n  </main>\r\n\r\n  <Dialog/>\r\n  <Progress/>\r\n\r\n</Locale>\r\n\r\n</>)}\r\n\r\n/**\r\n * リダイレクト\r\n * <pre>\r\n * PUBLIC_URLを付与したpathにリダイレクトする\r\n * </pre>\r\n * @param {string} path - URL\r\n */\r\nexport function Redirect(path) {\r\n  if ( path === undefined ) return;\r\n  const l = global.location;\r\n  l.href = process.env.PUBLIC_URL + path;\r\n}\r\n\r\n/**\r\n * メッセージ表示位置をクリア\r\n */\r\nexport function ClearMessage() {\r\n  setMessageId(\"\");\r\n  setMessages([]);\r\n  setMessageType(\"danger\");\r\n  setErrorDetail(\"\");\r\n}\r\n\r\n/**\r\n * 不明エラーメッセージ表示\r\n * <pre>\r\n * 不明のエラーオブジェクトを元に不明エラーを作成し、表示する\r\n * </pre>\r\n * @param {object} detail - エラーオブジェクト\r\n */\r\nexport function UnknownErrorMessage(detail) {\r\n  let msg = detail;\r\n  if ( detail !== null && typeof detail === \"object\" ) {\r\n    msg = JSON.stringify(detail);\r\n  }\r\n  //TODO IDを\r\n  setMessageId(\"PRFN00M000\");\r\n  setMessages([]);\r\n  setMessageType(\"danger\");\r\n  setErrorDetail(msg);\r\n}\r\n\r\n/**\r\n * メッセージ表示\r\n * @param {string} id - メッセージID\r\n * @param {string} type - タイプ（bootstrapのAlertの属性）\r\n */\r\nexport function WriteMessage(id,type) {\r\n  setMessageType(type);\r\n  setMessageId(id);\r\n}\r\n\r\n/**\r\n * エラーメッセージ表示\r\n * <pre>\r\n * 定形のエラーオブジェクト(例外データ)からエラーを表示する\r\n * </pre>\r\n * @param {object} err - エラーオブジェクト\r\n */\r\nexport function WriteErrorMessage(err) {\r\n\r\n  var resp = err.response;\r\n  var data = resp.data;\r\n\r\n  var id = data.messageID\r\n  var msgs = data.messages;\r\n  var detail = data.result;\r\n\r\n  setMessageType(\"danger\");\r\n  setMessageId(id);\r\n  setMessages(msgs);\r\n\r\n  if (detail === undefined ) {\r\n      detail = \"\";\r\n  }\r\n  setErrorDetail(detail);\r\n}\r\n\r\nexport const withRouter = WrappedComponent => props => {\r\n  const params = useParams();\r\n  return (\r\n    <WrappedComponent\r\n      {...props}\r\n      params={params}\r\n    />\r\n  );\r\n};\r\n\r\n/**\r\n * タイトル変更\r\n * <pre>\r\n * HTMLタイトルを変更\r\n * </pre>\r\n * @param {string} titleId タイトルID\r\n */\r\nexport function ChangeTitle(titleId) {\r\n  //TODO 実際のIDに変更\r\n  let name = GetLabel(\"SYSTEM\");\r\n  let page = GetLabel(titleId);\r\n  changeTitle(page + \"[\" + name + \"]\");\r\n}\r\n\r\n/**\r\n * パンくずデータ設定\r\n * @param {Array} crumbs パンくずデータ(id,link)\r\n */\r\nexport function SetBreadcrumbs(crumbs) {\r\n  setBreadcrumbs(crumbs);\r\n}\r\nexport default withRouter(Layout);\r\n","/**\n * @fileoverview \n * このファイルは共通的なプログレスバーを描画する為のものです。\n * 主にAPIから呼び出しが行われます。\n */\nimport React from \"react\";\n\nimport Toast from 'react-bootstrap/Toast';\nimport Spinner from 'react-bootstrap/Spinner';\n\nvar inst;\n\n/**\n * Progressクラス \n * <pre>\n * プログレスバーを設定するクラスです。\n * \n * 外部からShow(),Hide()を呼び出します。\n * </pre>\n */\nclass Progress extends React.Component {\n\n  /**\n   * コンストラクタ\n   * <pre>\n   * 状態を非表示に設定する\n   * </pre>\n   * @param {object} props - 指定なし\n   * @example\n   * Layout上にすでに\n   *   <Progress/> \n   * て宣言してある為、Show(),Hide()で呼び出すのみです。\n   */\n  constructor(props) {\n    super(props)\n    this.state = {\n      show : false\n    }\n    inst = this;\n  }\n\n  /**\n   * レンダリング関数\n   * <pre>\n   * スタイルクラス\"Progress\"の位置にToastを表示する。\n   * Spinnerのanimationはborderを指定。\n   * </pre>\n   * @returns プログレスバー(Toast)\n   */\n  render() {\nreturn (<>\n  <Toast className=\"Progress\" show={this.state.show}>\n    <Toast.Body>\n      <strong>Loading...</strong>\n      <Spinner animation=\"border\"/>\n    </Toast.Body>\n  </Toast>\n</>);\n    }\n}\n\n/**\n * 表示関数\n * <pre>\n * プログレスバーを表示する\n * </pre>\n * @memberOf Progress\n */\nexport function Show() {\n    inst.setState({show:true})\n}\n/**\n * 非表示関数\n * <pre>\n * プログレスバーを非表示にする\n * </pre>\n * @memberOf Progress\n */\nexport function Hide() {\n    inst.setState({show:false})\n}\n\nexport default Progress;\n","/**\r\n * @fileoverview \r\n * このファイルは暗号化を提供します。\r\n */\r\nimport AES from \"crypto-js/aes\";\r\nimport CryptJS from \"crypto-js\";\r\n\r\n/**\r\n * 暗号化クラス\r\n * <pre>\r\n * JSONをデータとして暗号、復号を提供する\r\n * 暗号、復号のアルゴリズム詳細はサーバサイド、または設計書による\r\n * </pre>\r\n */\r\nclass Encrypt {\r\n    static SECRETKEY = 'aes-256-cbc-text';\r\n    /**\r\n     * 復号化\r\n     * @param {string} buf 対象データ\r\n     * @returns {JSON} 暗号化後のデータ(JSON)\r\n     */\r\n    static decode(buf) {\r\n        if ( buf === undefined || buf === null || buf === \"\" ) {\r\n            return undefined;\r\n        }\r\n        var bytes = AES.decrypt(buf,this.SECRETKEY);\r\n        var obj = JSON.parse(bytes.toString(CryptJS.enc.Utf8));\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 暗号化\r\n     * @param {object} obj - 対象オブジェクト\r\n     * @returns 暗号化した文字列\r\n     */\r\n    static encode(obj) {\r\n        if ( obj === undefined ) {\r\n            return undefined;\r\n        }\r\n        var buf = JSON.stringify(obj);\r\n        var ret = AES.encrypt(buf,this.SECRETKEY);\r\n        return ret.toString();\r\n    }\r\n}\r\n\r\nexport default Encrypt;","/**\r\n * @fileoverview \r\n * このファイルは共通的に国際化を行う為のファイルです。\r\n * データファイルは\"locale-data\"に\"言語コード\".jsonで存在します。\r\n */\r\nimport React from 'react';\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport {createIntl, createIntlCache, RawIntlProvider} from 'react-intl';\r\nimport { instanceOf } from \"prop-types\";\r\nimport { withCookies,Cookies } from \"react-cookie\";\r\nimport Select from \"./pages/components/Select\";\r\nimport Package from \"../package.json\";\r\n\r\nimport ja from './locale-data/ja.json';\r\nimport en from './locale-data/en.json';\r\nimport zh from './locale-data/zh.json';\r\n\r\n/**\r\n * メッセージデータを作成する\r\n * @private\r\n * @param {string} locale - 指定言語文字列(ja,en,zhなど)\r\n * @returns jsonデータ\r\n */\r\nfunction selectMessages(locale) {\r\n  let lang = locale;\r\n  if ( lang === \"default\" ) {\r\n     lang = Package.language;\r\n  }\r\n  switch(lang) {\r\n    case 'en': return en;\r\n    case 'ja': return ja;\r\n    case 'zh': return zh;\r\n    default: return en;\r\n  }\r\n}\r\n\r\n/**\r\n * ロケールデータ作成\r\n * <pre>\r\n * selectMessages()によりJSONデータを\r\n * 指定した言語コードで設定する\r\n * </pre>\r\n * @param {string} locale - 言語コード\r\n * @returns react-intlインスタンス\r\n */\r\nfunction create(locale) {\r\n    const cache = createIntlCache()\r\n    var intl = createIntl({\r\n      locale,\r\n      messages: selectMessages(locale)\r\n    }, cache);\r\n    return intl;\r\n}\r\n\r\n/**\r\n * 言語切替\r\n * @private \r\n * @param {Event} e - Eventデータ(言語コード)\r\n */\r\nfunction changeLanguage(e) {\r\n  inst.setLanguage(e);\r\n}\r\n\r\nvar inst;\r\n\r\n/**\r\n * ロケールクラス\r\n * <pre>\r\n * 国際化用のクラス。現状は言語コードが主。\r\n * </pre>\r\n * @example\r\n * <Locale/> がLayoutに埋め込んであるため、業務で使用することはありません。\r\n * Locale内に国際化を行うコンポーネントを指定しておく必要があります。\r\n */\r\nexport class Locale extends React.Component {\r\n\r\n  static propTypes = {\r\n      cookies : instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * <pre>\r\n   * クッキー内から言語を取得して、設定する。\r\n   * 存在しない場合、言語はシステムのデフォルト値を設定しておき、\r\n   * 画面用の設定値としてデフォルトに設定\r\n   * 状態として言語データを設定しておく\r\n   * </pre>\r\n   * @constructor \r\n   * @param {Cookies} props - Cookieアクセスデータ\r\n   */\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      inst = this;\r\n      const { cookies } = this.props;\r\n\r\n      let lang = cookies.get(\"language\");\r\n      this.selectLang = lang;\r\n      if ( lang == null ) {\r\n        //TODO config.jsに切り替える必要あり\r\n        lang = Package.language;\r\n        this.selectLang = \"default\";\r\n      }\r\n      this.state = {intl:create(lang)};\r\n  }\r\n\r\n  /**\r\n   * 現在の選択言語を取得\r\n   * @returns 現在の言語コード\r\n   */\r\n  getLanguage = () => {\r\n    return this.selectLang;\r\n  }\r\n\r\n  /**\r\n   * 言語クッキーの削除\r\n   */\r\n  remove = () => {\r\n    const { cookies } = this.props;\r\n    cookies.remove('language', { path: '/' });\r\n  }\r\n\r\n  /**\r\n   * 言語設定\r\n   * <pre>\r\n   * 指定した言語コードに設定。\r\n   * 言語コードがdefaultの場合、システムのデフォルトを設定\r\n   * 言語コードをクッキーに設定\r\n   * </pre>\r\n   * @param {string} locale - 指定言語コード\r\n   */\r\n  setLanguage = (locale) => {\r\n    var lang = locale;\r\n    if ( locale === \"default\" ) {\r\n      lang = Package.language;\r\n    }\r\n\r\n    this.setState({intl:create(lang)});\r\n    const { cookies } = this.props;\r\n    cookies.set('language', locale, { path: '/' });\r\n\r\n    this.selectLang = locale;\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * <pre>\r\n   * 状態に設定されているロケールで子を描画する\r\n   * </pre>\r\n   * @returns 国際化を施した子のエレメント\r\n   */\r\n  render() {\r\n    return  (\r\n      <RawIntlProvider value={this.state.intl}> <> {this.props.children} </> </RawIntlProvider>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * 言語データ取得\r\n * @private\r\n * @param {string} id - ID\r\n * @returns 言語データ\r\n */\r\nfunction get(id) {\r\n  return inst.state.intl.formatMessage({id:id});\r\n}\r\n\r\n/**\r\n * メッセージ取得\r\n * @param {string} id - ID\r\n * @returns 言語データ\r\n */\r\nexport function GetMessage(id) {\r\n  return get(id);\r\n}\r\n\r\n/**\r\n * ラベル取得\r\n * @param {string} id - ID\r\n * @returns 言語データ\r\n */\r\nexport function GetLabel(id) {\r\n  return get(id);\r\n}\r\n\r\n/**\r\n * ラベル取得タグ\r\n * @param {object} props - id : 言語コード\r\n * @returns react-intl.FormattedMessageタグ\r\n * @example\r\n * <Message id=\"xxx\" />\r\n * xxxのIDを持つ言語データを描画\r\n */\r\nexport function Label(props) {\r\n  return (\r\n    <FormattedMessage id={props.id}/>\r\n  )\r\n}\r\n\r\n/**\r\n * メッセージ取得タグ\r\n * @param {object} props - id : 言語コード\r\n * @returns react-intl.FormattedMessageタグ\r\n * @example\r\n * <Message id=\"xxx\" />\r\n * xxxのIDを持つ言語データを描画\r\n */\r\nexport function Message(props) {\r\n  return (\r\n    <FormattedMessage id={props.id}/>\r\n  )\r\n}\r\n\r\n/**\r\n * 設定言語取得\r\n * @returns クッキーに設定されている言語コード\r\n */\r\nexport function GetLanguage() {\r\n  return inst.getLanguage();\r\n}\r\n\r\n/**\r\n * 言語設定\r\n * @param {string} lang - 言語コード\r\n */\r\nexport function SetLanguage(lang) {\r\n  inst.setLanguage(lang);\r\n}\r\n\r\n/**\r\n * 言語クッキー削除\r\n */\r\nexport function RemoveLanguage() {\r\n  inst.remove();\r\n}\r\n\r\n/**\r\n * 言語切替コンポーネント\r\n * <pre>\r\n * システムの言語一覧を設定し、言語切替を提供する\r\n * </pre>\r\n * @returns 言語切替コンポーネント\r\n * @example\r\n * <SelectLanguage/> を行うと言語切り替えのコンポーネントを表示\r\n */\r\nexport function SelectLanguage() {\r\n\r\n  let languages = {};\r\n  //TODO config.jsに切り替える\r\n  //TODO 実際のIDに設定を切り替える (あれ？ID化できる？)\r\n  languages[\"default\"] = GetLabel(\"PRFN00L004\");\r\n  languages[\"en\"] = GetLabel(\"PRFN00L001\");\r\n  languages[\"zh\"] = GetLabel(\"PRFN00L002\");\r\n  languages[\"ja\"] = GetLabel(\"PRFN00L003\");\r\n\r\n  return (<>\r\n    <FormattedMessage id=\"PRFN00L103\"/>\r\n    <Select values={languages} value={inst.selectLang} onChange={changeLanguage} />\r\n  </>);\r\n}\r\n\r\nexport default withCookies(Locale);\r\n","/**\r\n * @fileoverview \r\n * このファイルは認証機構を提供するモジュールです。\r\n */\r\nimport React from \"react\";\r\n\r\nimport { instanceOf } from \"prop-types\";\r\nimport { withCookies,Cookies } from \"react-cookie\";\r\n\r\nimport { Redirect } from \"./Layout\";\r\nimport Package from \"../package.json\";\r\nimport Encrypt from \"./Encrypt\";\r\nimport Util from \"./Util\";\r\n\r\n/** 認証なしURLの群 */\r\nconst noAuthenticationURLs = [\"/\",\"/error/*\",\"/message/*\"];\r\n\r\nvar inst;\r\n\r\n/**\r\n * 認証クラス\r\n * <pre>\r\n * クッキーを利用し、認証情報を扱う。暗号化はEncryptにより行う\r\n * </pre>\r\n */\r\nclass Authentication extends React.Component {\r\n\r\n  static propTypes = {\r\n      cookies : instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * <pre>\r\n   * 認証ページ時にセッション情報の存在を確認する\r\n   * - セッション自体の存在\r\n   * - 有効期限の確認j\r\n   * </pre>\r\n   * @constructor\r\n   * @param {Cookies} props - なし\r\n   * @example\r\n   * Layoutにより埋め込み\r\n   * \r\n   * <Authentication/>\r\n   * \r\n   * 特に描画はない\r\n   */\r\n  constructor(props) {\r\n\r\n      super(props)\r\n      inst = this;\r\n\r\n      this.urls = [];\r\n      noAuthenticationURLs.forEach( (v) => {\r\n        this.urls.push(process.env.PUBLIC_URL + v);\r\n      })\r\n\r\n      /*\r\n      const {cookies} = this.props;\r\n      let session = cookies.get(\"session\");\r\n      this.session = Encrypt.decode(session);\r\n\r\n      if ( this.session !== undefined ) {\r\n        var now = new Date()\r\n        var ex = new Date(this.session.exiry)\r\n        if ( now <= ex ) {\r\n          //有効期限切れ\r\n          Redirect(\"/message/expiry\",\"Authentication 有効期限切れ\");\r\n          return;\r\n        }\r\n      } else {\r\n        if ( this.isAuthPage() ) {\r\n          //認証なしでのアクセス\r\n          Redirect(\"/message/noneAuth\",\"Authentication 認証なしアクセス\");\r\n          return;\r\n        }\r\n      }\r\n      */\r\n\r\n  }\r\n\r\n  /**\r\n   * コンポーネントマウント時の処理 \r\n   * <pre>\r\n   * リフレッシュのタイマーを設定する\r\n   * mousemoveにより、マウスが動作している場合はタイマーのリセットを行う\r\n   * 動いている判定は負荷軽減の為、5秒おきに行う。\r\n   * ※リフレッシュタイマー自体はリセット時の説明に記載\r\n   * 非認証ページ時の時は行わない\r\n   * </pre>\r\n   */\r\n  componentDidMount() {\r\n\r\n    this.refreshReload = undefined;\r\n    var mouseMove = false;\r\n    var self = this;\r\n\r\n    if ( !this.isAuthPage() ) {\r\n      return;\r\n    }\r\n    var refreshFunc = function() {\r\n      if ( mouseMove ) {\r\n        self.refreshTimer();\r\n        mouseMove = false;\r\n        console.log(\"refresh:\" + new Date());\r\n      }\r\n    }\r\n\r\n    var once = true;\r\n    document.addEventListener(\"mousemove\",function() {\r\n      mouseMove = true;\r\n      if ( once ) {\r\n        setInterval(refreshFunc,5000);\r\n        once = false;\r\n      }\r\n    });\r\n    this.refreshTimer();\r\n  }\r\n\r\n  /**\r\n   * タイマーリフレッシュ\r\n   * <pre>\r\n   * リフレッシュページへのリダイレクトのタイマーを設定する。\r\n   * 既にタイマーが設定されている場合のタイマーは削除\r\n   * タイマーが動作する時刻は外部設定値による。\r\n   * 非認証ページ時は行わない\r\n   * </pre>\r\n   */\r\n  refreshTimer() {\r\n    if ( !this.isAuthPage() ) {\r\n      return;\r\n    }\r\n\r\n    if ( this.refreshReload !== undefined ) {\r\n      clearTimeout(this.refreshReload);\r\n    }\r\n    this.refreshReload = setTimeout(function() {\r\n      Redirect(\"/error/refresh\",\"Authentication refresh\")\r\n    },1000 * Package.clientExpiry);\r\n  }\r\n\r\n  /**\r\n   * 認証が必要なページかを判定\r\n   * @returns 必要な場合、true\r\n   */\r\n  isAuthPage() {\r\n    const l = global.location;\r\n    let path = l.pathname;\r\n    return !Util.match(path,this.urls);\r\n  }\r\n\r\n  /**\r\n   * 認証情報を暗号化してクッキーに設定\r\n   * @param {object} obj - 認証情報\r\n   */\r\n  save(obj) {\r\n      const {cookies} = this.props;\r\n      var buf = Encrypt.encode(obj);\r\n      cookies.set(\"session\",buf,{path: \"/\"});\r\n  }\r\n\r\n  /**\r\n   * 認証情報をクッキーから削除\r\n   */\r\n  remove() {\r\n      const {cookies} = this.props;\r\n      cookies.remove(\"session\",{path:\"/\"});\r\n  }\r\n\r\n  removeSession() {\r\n      const {cookies} = this.props;\r\n      cookies.remove(\"JSESSIONID\",{path:\"/\"});\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * @returns 空\r\n   */\r\n  render() {\r\n    return (<></>);\r\n  }\r\n}\r\n\r\n/**\r\n * 認証情報保存\r\n * @param {object} obj - 暗号化対象データ \r\n */\r\nexport function Save(obj) {\r\n    inst.save(obj);\r\n}\r\n\r\n/**\r\n * JWTデータの生成\r\n * <pre>\r\n * クッキー情報を暗号化したデータを返す\r\n * クッキーが存在しない場合空を返す\r\n * </pre>\r\n * @returns 認証情報（暗号化データ）\r\n */\r\nexport function CreateJWT() {\r\n    if ( inst.session !== undefined ) {\r\n      return Encrypt.encode(inst.session);\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/**\r\n * ロール時表示切替\r\n * <pre>\r\n * ロールによる表示切り替えを行う\r\n * TODO 実際には権限を作成して、オブジェクトIDを指定\r\n * </pre>\r\n * @param {object} props - permission:オブジェクトID\r\n * @returns 権限ありの場合のみ子を表示\r\n */\r\nexport function Role(props) {\r\n    if ( inst.session !== undefined ) {\r\n        var role = inst.session.role;\r\n        if ( Array.isArray(props.permission) ) {\r\n            if ( props.permission.includes(role) ) {\r\n                return (<>{props.children}</>);\r\n            }\r\n        } else if ( Array.isArray(props.ignore) ) {\r\n            if ( !props.permission.includes(role) ) {\r\n                return (<>{props.children}</>);\r\n            }\r\n        }\r\n    } \r\n    return (<></>)\r\n}\r\n\r\n/**\r\n * ログイン状態表示\r\n * <pre>\r\n * ログイン状態の場合、子の表示を行う\r\n * notを指定した場合、逆になる。\r\n * </pre>\r\n * @param {object} props - not:認証有無\r\n * @returns ありなしの判定により、子かもしくは空\r\n * @example\r\n * <LoginPage>aaa</LoginPage>\r\n * とした場合、ログイン状態の場合のみaaaを表示\r\n * \r\n * <LoginPage not=\"true\">aaa</LoginPage>\r\n * とした場合、ログインをしてない場合のみaaaを表示\r\n */\r\nexport function LoginPage(props) {\r\n    if ( !inst.isAuthPage() ) {\r\n      return (<></>);\r\n    }\r\n    return (<>{props.children}</>);\r\n}\r\n\r\n/**\r\n * クッキー情報の削除\r\n * @param {object} props - 指定なし\r\n */\r\nexport function Remove(props) {\r\n  inst.remove();\r\n}\r\n\r\nexport function RemoveSession(props) {\r\n  inst.removeSession();\r\n}\r\n\r\n/**\r\n * ログアウトページへの遷移\r\n * @param {object} props - 指定なし\r\n */\r\nexport function Logout(props) {\r\n    Redirect(\"/message/Logout\",\"Logout\");\r\n}\r\n\r\n/**\r\n * ユーザ名称を取得\r\n * @returns ユーザ名称\r\n */\r\nexport function Name() {\r\n    if ( inst.session !== undefined ) {\r\n        return inst.session.name;\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport default withCookies(Authentication)\r\n","/**\r\n * @fileoverview \r\n * サーバサイド呼び出し用API群\r\n */\r\nimport axios from 'axios';\r\nimport { CreateJWT } from \"./Authentication\";\r\nimport { Show, Hide } from \"./Progress\";\r\nimport { UnknownErrorMessage } from \"./Layout\";\r\nimport { GetLanguage } from './Locale';\r\n\r\n/**\r\n * サーバサイド呼び出しクラス\r\n */\r\nclass API {\r\n\r\n  static mockMode = false;\r\n\r\n  static async testMode() {\r\n    //mockMode = true;\r\n  }\r\n  static async setMock(mock, reject = false) {\r\n    //mockMode = true;\r\n  }\r\n\r\n  /**\r\n   * インスタンス生成\r\n   * <pre>\r\n   * クッキーからJWTを取得し、\r\n   * ヘッダにJWT、Languageをヘッダに設定\r\n   * </pre>\r\n   * @private\r\n   * @returns アクセス用のインスタンス\r\n   */\r\n  static createInstance() {\r\n    var jwt = CreateJWT();\r\n    const instance = axios.create({\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': jwt,\r\n        'Language': GetLanguage()\r\n      }, timeout: 10000,\r\n    });\r\n\r\n    console.log(GetLanguage());\r\n\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * POST呼び出し\r\n   * @param {string} url - URL\r\n   * @param {function} callback - 正常時関数\r\n   * @param {object} data - 引数\r\n   * @returns {Promise} \r\n   */\r\n  static async post(url, callback, data) {\r\n    return await this.caller(\"POST\", url, callback, data);\r\n  }\r\n\r\n  /**\r\n   * PUT呼び出し\r\n   * @param {string} url - URL\r\n   * @param {function} callback - 正常時関数\r\n   * @param {object} data - 引数\r\n   * @returns {Promise} \r\n   */\r\n  static async put(url, callback, data) {\r\n    return await this.caller(\"PUT\", url, callback, data);\r\n  }\r\n\r\n  /**\r\n   * PATCH呼び出し\r\n   * @param {string} url - URL\r\n   * @param {function} callback - 正常時関数\r\n   * @param {object} data - 引数\r\n   * @returns {Promise} \r\n   */\r\n  static async patch(url, callback, data) {\r\n    return await this.caller(\"PATCH\", url, callback, data);\r\n  }\r\n\r\n  /**\r\n   * DELETE呼び出し\r\n   * @param {string} url - URL\r\n   * @param {function} callback - 正常時関数\r\n   * @param {object} data - 引数\r\n   * @returns {Promise} \r\n   */\r\n  static async delete(url, callback, data) {\r\n    return await this.caller(\"DELETE\", url, callback, data);\r\n  }\r\n\r\n  /**\r\n   * サーバサイド呼び出し\r\n   * <pre>\r\n   * 指定したURLに指定したメソッドでAPIとして呼び出す\r\n   * 認証用のインスタンスを準備し、プログレスバー（Progress.Show()）を呼び出す\r\n   * リクエストは正常系の場合コールバックを呼び出し、\r\n   * 異常時はPromiseをRejectする。\r\n   * finallyとしてProgress.Hide()を必ず呼び出す\r\n   * </pre>\r\n   * @private\r\n   * @param {string} method - リクエスト時のHTTPメソッド名\r\n   * @param {string} url - URL\r\n   * @param {function} callback - 正常時関数\r\n   * @param {object} data - 引数\r\n   * @returns {Promise} \r\n   */\r\n  static async caller(method, url, callback, data) {\r\n\r\n    let inst = this.createInstance();\r\n    Show();\r\n\r\n    var ctx = process.env.PUBLIC_URL + url;\r\n    return await inst.request({\r\n      method: method, url: ctx, data: data\r\n    }).then(response => {\r\n      return callback(response)\r\n    }).catch((error) => {\r\n      return Promise.reject(error)\r\n    }).finally(() => {\r\n      Hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 正常エラー判定\r\n   * <pre>\r\n   * エラーがAPI時の形式として正常かを判定する。\r\n   * ※主に予期しない例外(タイムアウトエラーなど)にtrueになる\r\n   * \r\n   * true時はLayout.UnknownErrorMessage()を呼び出し、\r\n   * 異常メッセージを表示\r\n   * </pre>\r\n   * @param {object} err - エラー用のオブジェクト\r\n   * @returns エラーが認識できる場合false\r\n   */\r\n  static isUnknownError(err) {\r\n    if (err !== undefined) {\r\n      var resp = err.response;\r\n      if (resp !== undefined) {\r\n        var data = resp.data;\r\n        if (data.messageID !== undefined) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    UnknownErrorMessage(err);\r\n    return true;\r\n  }\r\n}\r\nexport default API\r\n","/**\r\n * @fileoverview \r\n * Loginページ用のファイル\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Container,Row,Col,\r\n  Form,Button\r\n } from 'react-bootstrap';\r\n\r\nimport {SelectLanguage, GetLanguage,SetLanguage,\r\n        GetLabel,Label} from '../Locale';\r\nimport {WriteErrorMessage,ClearMessage,Redirect}  from \"../Layout\";\r\nimport {Save} from \"../Authentication\";\r\nimport API from \"../API\";\r\n\r\n/**\r\n * ログインページ\r\n * \r\n * ここに仕様を書いていきます。\r\n * @namespace Login\r\n * @example\r\n * <Login />\r\n */\r\nclass Login extends React.Component {\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * <pre>\r\n   * 利用する入力値のrefを生成\r\n   * state.expiryをfalseに設定\r\n   * </pre>\r\n   * @param {object} props - なし\r\n   */\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n      this.userId = React.createRef(); \r\n      this.password = React.createRef(); \r\n      this.newPassword1 = React.createRef(); \r\n      this.newPassword2 = React.createRef(); \r\n\r\n      this.state = { expiry : false,data : [19,20] }\r\n  }\r\n\r\n  /**\r\n   * ログインボタン押下処理\r\n   * <pre>\r\n   * 入力値(ID、パスワード、言語)を元にLoginAPIを呼び出す\r\n   * LoginAPI: /api/v1/login\r\n   * 正常時：\r\n   *   ログイン情報、言語をクッキーを保存しメニューに遷移\r\n   * 異常時\r\n   *   401時：有効期限切れを確認し、有効期限の場合\r\n   *          state.expiryをtrueにする\r\n   *　 その他はエラーメッセージを表示\r\n   * </pre>\r\n   * @param {Event} e - クリックイベント\r\n   * @returns false\r\n   */\r\n  handleLoginClick = (e) => {\r\n\r\n    ClearMessage();\r\n\r\n    let data = {\r\n        id : this.userId.current.value,\r\n        password : this.password.current.value,\r\n        language : GetLanguage()\r\n    }\r\n\r\n    API.post(\"/api/v1/login\",\r\n      resp => {\r\n        Save(resp.data.result.user);\r\n        SetLanguage(resp.data.result.language);\r\n        Redirect('/pages/demo/menu');\r\n    },data).catch( (err) => {\r\n\r\n      if ( API.isUnknownError(err) ) {\r\n        return;\r\n      }\r\n\r\n      let resp = err.response;\r\n      let result = resp.data;\r\n      switch ( resp.status ) {\r\n        case 401:\r\n          let expiry = false;\r\n          let msgId = result.messageID;\r\n          if ( msgId === \"PRFN00M102\" ) {\r\n             expiry = true\r\n          }\r\n          this.setState({ expiry : expiry });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      WriteErrorMessage(err);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * パスワード変更クリックイベント\r\n   * <pre>\r\n   * 変更パスワードをAPIに送信し、パスワードを変更する\r\n   * API[/api/v1/password]\r\n   * 正常時:ログイン画面に遷移する\r\n   * 異常時:メッセージを表示する\r\n   * </pre>\r\n   * @param {Event} e - クリックイベント\r\n   * @returns false\r\n   */\r\n  handleUpdateClick = (e) => {\r\n\r\n    let new1 = this.newPassword1.current.value;\r\n    let new2 = this.newPassword2.current.value;\r\n    let data = {\r\n        userId      : this.userId.current.value,\r\n        oldPassword : this.password.current.value,\r\n        newPassword1 : new1,\r\n        newPassword2 : new2\r\n    }\r\n\r\n    API.put(\"/api/v1/password\",\r\n      resp => {\r\n        Save(resp.data.result.user);\r\n        Redirect('/pages/menu');\r\n    },data).catch( (err) => {\r\n      if ( API.isUnknownError(err) ) {\r\n        return;\r\n      }\r\n      WriteErrorMessage(err);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * ログイン画面表示\r\n   * state.expiry: true時にパスワード変更のコンポーネントを表示\r\n   * ログインボタンを非表示、更新キャンセルボタンを表示\r\n   * @returns ログイン画面\r\n   */\r\n  render() {\r\n    let expiry = this.state.expiry;\r\n\r\n    return ( <>\r\n\r\n{this.state.data.map( (i,j) => {\r\n  return (<>\r\n  <div key={j}>{i + j}</div>\r\n  </>)\r\n})}\r\n\r\n<Form>\r\n  <Container>\r\n\r\n    <SpaceRow>\r\n      <Form.Group>\r\n        <Form.Label> <Label id=\"PRFN00L101\"/> </Form.Label>\r\n        <Form.Control type=\"text\" placeholder={GetLabel(\"PRFN00L101\")} ref={this.userId} />\r\n      </Form.Group>\r\n    </SpaceRow>\r\n\r\n    <SpaceRow>\r\n      <Form.Group>\r\n        <Form.Label> <Label id=\"PRFN00L102\"/> </Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"\" ref={this.password} />\r\n      </Form.Group>\r\n    </SpaceRow>\r\n\r\n    <SpaceRow>\r\n      <SelectLanguage />\r\n    </SpaceRow>\r\n\r\n    {/* ログインボタン */}\r\n    {!expiry &&\r\n    <SpaceRow>\r\n      <Button variant=\"primary\" onClick={this.handleLoginClick}> \r\n        <Label id=\"PRFN00L104\"/>\r\n      </Button>\r\n    </SpaceRow>\r\n    }\r\n\r\n    {/* 有効期限フォーム */}\r\n    {expiry &&\r\n<>\r\n    <SpaceRow>\r\n      <Form.Group>\r\n        <Form.Label> <Label id=\"PRFN00L202\"/> </Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" ref={this.newPassword1} />\r\n      </Form.Group>\r\n    </SpaceRow>\r\n\r\n    <SpaceRow>\r\n      <Form.Group>\r\n        <Form.Label> <Label id=\"PRFN00L203\"/> </Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" ref={this.newPassword2} />\r\n      </Form.Group>\r\n    </SpaceRow>\r\n\r\n    <SpaceRow>\r\n      <Button variant=\"primary\" onClick={this.handleUpdateClick}> \r\n        <Label id=\"PRFN00L204\"/>\r\n      </Button>\r\n    </SpaceRow>\r\n</>\r\n    }\r\n\r\n  </Container>\r\n\r\n</Form>\r\n\r\n</>);\r\n  }\r\n}\r\n\r\n/**\r\n * 描画調整用関数\r\n * <pre>\r\n * props.childrenをRow,Col内に入れて調整する\r\n * </pre>\r\n * @memberof Login\r\n * @param {object} props - タグ属性(childrenを使用)\r\n * @returns <Row>タグ\r\n * @example\r\n * <SpaceRow>aaa</SpaceRow>と行うとスペースを開けて真ん中に表示する\r\n * \r\n * <Row>\r\n * <Col></Col>\r\n * <Col>aaa</Col>\r\n * <Col></Col>\r\n * </Row>\r\n * \r\n * という出力\r\n */\r\nfunction SpaceRow(props) {\r\n  return (\r\n<Row className=\"mb-3\">\r\n  <Col></Col>\r\n  <Col xs=\"6\">\r\n    {props.children}\r\n  </Col>\r\n  <Col></Col>\r\n</Row>\r\n  );\r\n}\r\n\r\nexport default Login\r\n","import React,{createRef} from \"react\";\r\nimport {\r\n    Row,Col,\r\n    Button, Modal, Form\r\n} from \"react-bootstrap\";\r\n\r\nimport DateTime from \"../../components/DateTime\";\r\nimport API from \"../../../API\";\r\nimport {ClearMessage, WriteErrorMessage} from \"../../../Layout\";\r\n\r\nexport function ShowInput(date) {\r\n    inst.handleShow(date);\r\n}\r\n\r\nvar inst;\r\nclass PlanInputDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        inst = this;\r\n\r\n        this.state = {\r\n            targetDate : undefined,\r\n\t\t\tshow : false,\r\n            name : \"計画 詳細\",\r\n            start: \"0 8:00\",\r\n            end: \"0 12:00\"\r\n\t\t}\r\n\r\n        this.start = createRef(); \r\n        this.end = createRef(); \r\n        this.name = createRef(); \r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleCommit = this.handleCommit.bind(this);\r\n    }\r\n\r\n\thandleShow = (date) => {\r\n        ClearMessage();\r\n\t\tthis.setState({\r\n            show:true,\r\n            targetDate:date\r\n        });\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show:false})\r\n\t}\r\n\r\n\thandleCommit = () => {\r\n\r\n        let obj = {\r\n            place : 1,\r\n            name : this.name.current.value,\r\n            date : this.state.targetDate,\r\n            start : this.start.current.get(),\r\n            end : this.end.current.get()\r\n        }\r\n\r\n        API.post(\"/api/demo/plan/edit\", resp => {\r\n          console.log(resp)\r\n          //API呼び出し\r\n\t\t  this.handleClose();\r\n        },obj).catch( (err) => {\r\n          if ( API.isUnknownError(err) ) {\r\n            return;\r\n          }\r\n          WriteErrorMessage(err);\r\n        });\r\n\r\n\t}\r\n\r\n    render() {\r\n        return (<>\r\n<Modal show={this.state.show} onHide={this.handleClose}>\r\n  <Modal.Header closeButton>\r\n\t  <Modal.Title>計画入力 {this.state.targetDate}</Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body>\r\n      <Row>\r\n      <Col>名称</Col>\r\n      <Col><Form.Control defaultValue={this.state.name} ref={this.name}></Form.Control></Col>\r\n      </Row>\r\n      <Row>\r\n      <Col>開始</Col>\r\n      <Col><DateTime type=\"time\" value={this.state.start} ref={this.start}/></Col>\r\n      </Row>\r\n      <Row>\r\n      <Col>終了</Col>\r\n      <Col><DateTime type=\"time\" value={this.state.end} ref={this.end}/></Col>\r\n      </Row>\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n    <Button variant=\"primary\" onClick={this.handleCommit}>\r\n        作成\r\n    </Button>\r\n  </Modal.Footer>\r\n</Modal>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default PlanInputDialog;","/**\r\n * @fileoverview \r\n * メッセージ画面用のファイル\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withRouter, WriteMessage } from \"../Layout\";\r\nimport { Remove } from \"../Authentication\";\r\nimport { RemoveSession } from \"../Authentication\";\r\nimport { RemoveLanguage } from \"../Locale\";\r\n\r\n/**\r\n * メッセージ画面\r\n * <pre>\r\n * メッセージ画面をメッセージのみを表示するページです。\r\n * \r\n * 基本的にはログアウトやリフレッシュ、NotFoundなどで利用します。\r\n * </pre>\r\n */\r\nclass Message extends React.Component {\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @param {object} props - id,type\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        if (props.id !== undefined) {\r\n            WriteMessage(props.id, props.type);\r\n        } else if (props.params !== undefined) {\r\n            var id = props.params.id\r\n            WriteMessage(id, props.type);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * コンポーネントマウント\r\n     * <pre>\r\n     * クッキーデータをすべて削除\r\n     * </pre>\r\n     */\r\n    componentDidMount() {\r\n        //Remove();\r\n        //RemoveLanguage();\r\n        RemoveSession();\r\n    }\r\n\r\n    /**\r\n     * レンダリング\r\n     * <pre>\r\n     * 現状メッセージとログインのリンクを表示予定\r\n     * </pre>\r\n     * @returns Linkタグ\r\n     */\r\n    render() {\r\n        return (<>\r\n            <Link to=\"/\">ログインする</Link>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default withRouter(Message);\r\n","/**\r\n * @fileoverview \r\n * メニュー画面用のファイル\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Container,\r\n  Card, Row, Col, Button\r\n} from \"react-bootstrap\";\r\n\r\nimport { Role } from \"../Authentication\";\r\nimport { Redirect } from \"../Layout\";\r\n\r\nimport \"../css/Main.css\";\r\n\r\n/**\r\n * メニューページコンポーネント\r\n */\r\nclass Menu extends React.Component {\r\n\r\n  gotoPlan = () => {\r\n    Redirect(\"/pages/plan/\");\r\n    return;\r\n  }\r\n\r\n  gotoDate = () => {\r\n    Redirect(\"/pages/date/\");\r\n    return;\r\n  }\r\n\r\n  gotoToDo = () => {\r\n    Redirect(\"/pages/todo/\");\r\n    return;\r\n  }\r\n\r\n  gotoPaging = () => {\r\n    Redirect(\"/pages/paging/\");\r\n    return;\r\n  }\r\n\r\n  gotoFloat = () => {\r\n    Redirect(\"/pages/floating/\");\r\n    return;\r\n  }\r\n\r\n  gotoDialogs = () => {\r\n    Redirect(\"/pages/dialogs/\");\r\n    return;\r\n  }\r\n\r\n  gotoOperation = () => {\r\n    Redirect(\"/pages/operation/\");\r\n    return;\r\n  }\r\n\r\n  gotoUsers = () => {\r\n    Redirect(\"/pages/users/\");\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * @returns containerタグ\r\n   */\r\n  render() {\r\n    return (<>\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Sample TODO</Card.Title>\r\n                <Card.Text>\r\n                  Card Text\r\n                </Card.Text>\r\n\r\n                <Button variant=\"primary\" onClick={this.gotoToDo}>Go SampleToDo </Button>\r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Sample Date</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoDate}>Go Sample Date </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Sample Plan</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoPlan}>Go Plan </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Sample Float</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoFloat}>Go Sample Float </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Sample Paging</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoPaging}>Go Database Date</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Sample Dialog</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoDialogs}>Go Sample Dialog</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Operation</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoOperation}>Go Operation</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Card className=\"Menu-Card\">\r\n              <Card.Body>\r\n                <Card.Title>Users</Card.Title>\r\n                <Card.Text>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={this.gotoUsers}>Go UsersSearch</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Role permission={[\"admin\"]}>\r\n            <Col>\r\n              <Card className=\"Menu-Card\">\r\n                <Card.Body>\r\n                  <Card.Title>Function Admin</Card.Title>\r\n                  <Card.Text>\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\">Go C</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Role>\r\n\r\n        </Row>\r\n      </Container>\r\n\r\n    </>)\r\n  };\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport {WriteErrorMessage} from '../../../Layout';\r\nimport API from \"../../../API\"\r\nimport {ShowConfirm} from \"../../../Dialog\"\r\n\r\nclass ToDo extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.addText = React.createRef();\r\n\r\n    var todos = [];\r\n    this.state = {\r\n      todos:todos\r\n    }\r\n\r\n    this.add = this.add.bind(this); \r\n    this.del = this.del.bind(this); \r\n  }\r\n  \r\n  componentDidMount() {\r\n    var args = {\r\n    };\r\n    API.post(\"/api/demo/todo/view\",resp => {\r\n      let todos = resp.data.result.todos;\r\n      this.setState({\r\n        todos : todos\r\n      })\r\n    },args).catch((err) => {\r\n      if ( API.isUnknownError(err) ) {\r\n        return;\r\n      }\r\n      WriteErrorMessage(err);\r\n    });\r\n  }\r\n\r\n  add() {\r\n    let val = this.addText.current.value;\r\n    var args = {\r\n      value : val\r\n    };\r\n\r\n    API.post(\"/api/demo/todo/register\",resp => {\r\n      let todos = [...this.state.todos]\r\n      todos.push({ \r\n        id : resp.data.result,\r\n        value : val \r\n      });\r\n      this.setState({\r\n        todos:todos\r\n      });\r\n      this.addText.current.value = \"\";\r\n    },args).catch( (err) => {\r\n      if ( API.isUnknownError(err) ) {\r\n        return;\r\n      }\r\n      WriteErrorMessage(err);\r\n    }) \r\n  }\r\n\r\n  del(id) {\r\n\r\n    var args = {\r\n      id : id\r\n    };\r\n\r\n    let todos = this.state.todos.filter((x) => { return x.id !== id });\r\n    var self = this;\r\n\r\n    ShowConfirm(\"タイトル\",\"メッセージ\").then( () => {\r\n      API.delete(\"/api/demo/todo/delete\",resp => {\r\n        self.setState({\r\n          todos:todos\r\n        });\r\n      },args).catch( (err) => {\r\n        if ( API.isUnknownError(err) ) {\r\n          return;\r\n        }\r\n        WriteErrorMessage(err);\r\n      });\r\n    });\r\n  }    \r\n\r\n  render() {\r\n    return ( <>\t\r\n\r\n  <Row className=\"justify-content-between d-flex\" style={{ margin : \"2px\"}}>\r\n    <Form.Control type=\"text\" placeholder=\"\" ref={this.addText}/>\r\n    <Button variant=\"primary\" onClick={() => this.add()}>Add</Button>\r\n  </Row>\r\n\r\n  <ListGroup as=\"ol\" style={ {marginTop:\"20px\"} }>\r\n      { this.state.todos.map( ( obj ) => {\r\n        return (\r\n    <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\" key={obj.id}>\r\n      <div className=\"ms-2 me-auto\">\r\n        <div>{obj.value}</div>\r\n      </div>\r\n      <Button variant=\"danger\" onClick={() => this.del(obj.id)}>DELETE</Button>\r\n    </ListGroup.Item>\r\n        )\r\n      } ) }\r\n  </ListGroup>  \r\n\r\n\t</>);\r\n  }\r\n}\r\n\r\nexport default ToDo;","/**\r\n * @fileoverview \r\n * 日付指定用のコンポーネント用のファイル\r\n */\r\nimport React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport Select from \"./Select\";\r\nimport Util from \"../../Util\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport \"../../css/Main.css\";\r\n\r\n/**\r\n * 日付時刻コンポーネント\r\n * <pre>\r\n * カレンダー指定による\r\n * </pre>\r\n * @example\r\n * 日付時刻指定\r\n * <DateTime/>\r\n * 日付指定\r\n * <DateTime type=\"date\"/>\r\n * 時刻指定\r\n * <DateTime type=\"time\"/>\r\n * 値を指定\r\n * <DateTime value=\"2009-11-10 00:10\"/>\r\n * 時刻時の指定(日付がないことを0で表現)\r\n * <DateTime value=\"0 00:10\"/>\r\n * 分数の指定15分刻み\r\n * <DateTime step=\"15\"/>\r\n * 空指定を可能にする場合\r\n * <DateTime empty=\"true\"/>\r\n */\r\nclass DateTime extends React.Component {\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * <pre>\r\n     * 指定されたtype,step,emptyにより、stateを設定\r\n     * </pre>\r\n     * @constructor\r\n     * @param {object} props - type,step,empty\r\n     */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        let showDay = true;\r\n        let showTime = true;\r\n        this.step = 1;\r\n        this.empty = false;\r\n\r\n        var t = props.type;\r\n        if (t !== undefined) {\r\n            if (t === \"date\") {\r\n                showTime = false;\r\n            } else if (t === \"time\") {\r\n                showDay = false;\r\n            }\r\n        }\r\n\r\n        if (props.step !== undefined) {\r\n            this.step = parseInt(props.step);\r\n        }\r\n\r\n        var day = null;\r\n        var hour = 0;\r\n        var minute = 0;\r\n        if (props.value !== undefined) {\r\n            day = new Date(props.value);\r\n            hour = day.getHours();\r\n            minute = day.getMinutes();\r\n        } else {\r\n            if (props.empty !== undefined) {\r\n                this.empty = true;\r\n                hour = \"\";\r\n                minute = \"\";\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            hour: hour,\r\n            minute: minute,\r\n            day: day,\r\n            styles: [],\r\n            showDay: showDay,\r\n            showTime: showTime\r\n        }\r\n    }\r\n\r\n    /**\r\n     * スタイル設定\r\n     * <pre>\r\n     * 日付によるスタイルの設定を行います。\r\n     * </pre>\r\n     * @param {Array} days - day,value形式のオブジェクト配列\r\n     */\r\n    setStyles(days) {\r\n        var obj = {};\r\n\r\n        days.forEach((day) => {\r\n            let buf = day.day;\r\n            let val = day.value;\r\n            let arr = obj[val];\r\n            if (arr === undefined) {\r\n                arr = [];\r\n            }\r\n            arr.push(new Date(buf));\r\n            obj[val] = arr;\r\n        })\r\n\r\n        var styles = [];\r\n        let keys = Object.keys(obj);\r\n        keys.forEach((val) => {\r\n            let days = obj[val];\r\n            let name = \"Day-\" + val;\r\n            let style = {};\r\n            style[name] = days;\r\n            styles.push(style);\r\n        });\r\n        this.setState({ styles: styles });\r\n    }\r\n\r\n    /**\r\n     * 日付指定イベント\r\n     * @param {Date} day - カレンダーで指定した日付\r\n     */\r\n    handleDay(day) {\r\n        this.setState({\r\n            day: day\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 時刻選択イベント\r\n     * @param {number} hour - 指定した時刻\r\n     */\r\n    handleHour(hour) {\r\n        this.setState({\r\n            hour: hour\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 分選択イベント\r\n     * @param {number} minute - 指定した分\r\n     */\r\n    handleMinute(minute) {\r\n        this.setState({\r\n            minute: minute\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 時刻値の設定\r\n     * <pre>\r\n     * 時刻をオブジェクトで設定します。\r\n     * </pre>\r\n     * @param {Date} date - 時刻データ\r\n     */\r\n    set(date) {\r\n        let hour = date.getHours();\r\n        let minute = date.getMinutes();\r\n        this.setState({\r\n            day: date,\r\n            hour: hour,\r\n            minute: minute\r\n        })\r\n    }\r\n\r\n    /**\r\n     * データ取得\r\n     * <pre>\r\n     * コンポーネントに指定してあるデータを設定\r\n     * </pre>\r\n     * @returns 指定してある時刻データ\r\n     */\r\n    get() {\r\n        let rtn = \"\";\r\n        let day = this.state.day;\r\n        let hour = Util.zeroPadding(this.state.hour, 2);\r\n        let minute = Util.zeroPadding(this.state.minute, 2);\r\n\r\n        if (this.state.showDay) {\r\n            if (day != null) {\r\n                rtn = day.getFullYear() + \"-\" + (day.getMonth() + 1) + \"-\" + day.getDate();\r\n            } else {\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        if (this.state.showTime) {\r\n            if (rtn !== \"\") {\r\n                rtn += \" \";\r\n            }\r\n            if (this.empty) {\r\n                if (hour === \"\" || minute === \"\") {\r\n                    if (hour !== \"\" || minute !== \"\") {\r\n                        if (rtn === \"\") return null;\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rtn += hour;\r\n            rtn += \":\" + minute;\r\n        }\r\n\r\n        return rtn;\r\n    }\r\n\r\n    /**\r\n     * レンダリング関数\r\n     * <pre>\r\n     * 指定されたタイプによりレンダリング\r\n     * </pre>\r\n     * @returns \"DateTime\"クラスを指定したdivタグ\r\n     */\r\n    render() {\r\n        let hours = []\r\n        for (let i = 0; i < 24; ++i) {\r\n            hours[i] = i;\r\n        }\r\n\r\n        let minutes = []\r\n        for (let i = 0; i < 60; i = i + this.step) {\r\n            minutes[i] = i;\r\n        }\r\n\r\n        var now = new Date();\r\n        var next = new Date();\r\n        next.setMonth(next.getMonth() + 1);\r\n\r\n        return (\r\n            <>\r\n                <div className=\"DateTime\">\r\n                    {this.state.showDay &&\r\n                        <DatePicker\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            customInput={\r\n                                <Form.Control type=\"text\" />\r\n                            }\r\n                            highlightDates={this.state.styles}\r\n                            selected={this.state.day}\r\n                            onChange={(date) => this.handleDay(date)}\r\n                            minDate={now}\r\n                            maxDate={next}\r\n                            showDisabledMonthNavigation\r\n                        />\r\n                    }\r\n\r\n                    {this.state.showTime &&\r\n                        <>\r\n                            <Select values={hours} className=\"DateTime-Hour\" value={this.state.hour} empty={this.empty} onChange={(h) => this.handleHour(h)} />\r\n                            <Select values={minutes} className=\"DateTime-Minute\" value={this.state.minute} empty={this.empty} onChange={(m) => this.handleMinute(m)} />\r\n                        </>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DateTime;","import React, { createRef } from \"react\";\r\n\r\nimport {Button,Container} from \"react-bootstrap\";\r\nimport DateTime from \"../../components/DateTime\";\r\n\r\nclass DateView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.date = createRef();\r\n        this.datetime = createRef();\r\n        this.time = createRef();\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n      let obj = [\r\n        {day:\"2022-01-10\",value:1},\r\n        {day:\"2022-01-11\",value:1},\r\n        {day:\"2022-01-12\",value:1}\r\n      ]\r\n\r\n      this.date.current.setStyles(obj);\r\n    }\r\n\r\n    show = () => {\r\n        var d = this.date.current;\r\n        var dt = this.datetime.current;\r\n        var t = this.time.current;\r\n        console.log(d.get())\r\n        console.log(t.get())\r\n        console.log(dt.get())\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <Container>\r\n        日付のみ\r\n          <br/>\r\n          <DateTime type=\"date\" ref={this.date} value={new Date().toString()}/>\r\n          <br/>\r\n        時刻のみ\r\n          <br/>\r\n          <DateTime type=\"time\" ref={this.time} step=\"10\" value=\"0 10:10\"/>\r\n          <br/>\r\n          両方\r\n          <br/>\r\n          <DateTime type=\"datetime\" ref={this.datetime} empty=\"true\"/>\r\n          <br/>\r\n          <br/>\r\n          <Button onClick={this.show}>Val</Button>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nexport default DateView;","import React from \"react\";\r\nimport {Container,Table,Button,Row,Col} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//import Select from \"../components/Select\";\r\nimport {Redirect} from \"../../../Layout\";\r\nimport Util from \"../../../Util\";\r\nimport API from \"../../../API\";\r\nimport {WriteErrorMessage} from '../../../Layout';\r\n\r\nclass PlanView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.places = [];\r\n        this.places[1] = \"日本\";\r\n        this.places[2] = \"中国\";\r\n\r\n        this.state = {\r\n            plans : []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var args = {\r\n            placeId : 1\r\n        };\r\n        API.post(\"/api/demo/plan/view\",resp => {\r\n          let plans = resp.data.result.plans;\r\n          this.setState({\r\n            plans : plans\r\n          })\r\n        },args).catch((err) => {\r\n          if ( API.isUnknownError(err) ) {\r\n            return;\r\n          }\r\n          WriteErrorMessage(err);\r\n        });\r\n      }\r\n    \r\n    handleInput = () => {\r\n        var target = Util.nowString();\r\n        Redirect(\"/pages/plan/input/\" + target);\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n        <Container>\r\n\r\n        <Row>\r\n        {/* \r\n            <Col>\r\n        <Select values={this.places} value={1} />\r\n            </Col>\r\n        */}\r\n\r\n            <Col>\r\n        <Button onClick={this.handleInput}>入力</Button>\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n\r\n        <Table>\r\n          <tbody>\r\n\r\n       { this.state.plans.map( (obj,idx) => {\r\n           return (\r\n               <tr key={idx}>\r\n                   <td>\r\n            <Link key={idx} to={\"/pages/plan/input/\" + obj.date.slice(0,10)}>{obj.date.slice(0,10)}</Link>\r\n                   </td>\r\n            </tr>\r\n           )\r\n       })} \r\n          </tbody>\r\n        </Table>\r\n\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default PlanView;","import React from \"react\";\r\nimport {Button,Container,Table} from \"react-bootstrap\";\r\nimport PlanInputDialog,{ShowInput} from \"./Dialog\";\r\n\r\nimport DateTime from \"../../components/DateTime\";\r\nimport API from \"../../../API\";\r\nimport Util from \"../../../Util\";\r\nimport {withRouter,WriteErrorMessage} from '../../../Layout';\r\n\r\nclass PlanInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            targetDate : props.params.date,\r\n            details : []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var args = {\r\n            placeId : 1,\r\n            date : this.state.targetDate\r\n        };\r\n        API.post(\"/api/demo/plan/detail/view\",resp => {\r\n          let details = resp.data.result.details;\r\n          this.setState({\r\n            details : details\r\n          })\r\n        },args).catch((err) => {\r\n          if ( API.isUnknownError(err) ) {\r\n            return;\r\n          }\r\n          WriteErrorMessage(err);\r\n        });\r\n      }\r\n    handleInput = () => {\r\n        //ダイアログを呼ぶ\r\n        ShowInput(this.state.targetDate);\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n        <DateTime type=\"date\" value={this.state.targetDate}></DateTime>\r\n        <Button onClick={this.handleInput}>追加</Button>\r\n        <Container>\r\n            <Table>\r\n                <tbody>\r\n\r\n       { this.state.details.map( (obj,idx) => {\r\n           return (\r\n           <tr key={idx}>\r\n              <td> {Util.formatTime(obj.start)} </td>\r\n              <td> {Util.formatTime(obj.end)} </td>\r\n              <td> {obj.name} </td>\r\n            </tr>\r\n           )\r\n       })} \r\n                    </tbody>\r\n            </Table>\r\n        </Container>\r\n\r\n        <PlanInputDialog/>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default withRouter(PlanInput);","/**\r\n * @fileoverview \r\n * テキストコンポーネントからポップアップして表示するコンポーネント用のファイル\r\n */\r\nimport React from \"react\";\r\n\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nimport \"../../css/Main.css\";\r\n\r\n/**\r\n * 浮動入力コンポーネント\r\n * <pre>\r\n * テキストを描画し、テキストを入力する時に指定したコンポーネントを描画する\r\n * </pre>\r\n * @example\r\n * <FloatInput>\r\n * aaa\r\n * </FloatInput>\r\n * とした場合、描画されたテキストを選択すると「aaa」が表示される\r\n */\r\nclass FloatInput extends React.Component {\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * <pre>\r\n     * 使用するコンポーネントを初期化\r\n     * </pre>\r\n     * @constructor\r\n     * @param {object} props - value,values\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            float : false\r\n        }\r\n        this.input = React.createRef();\r\n        this.float = React.createRef();\r\n        this.inputId = props.value;\r\n        this.firstShow = false;\r\n    }\r\n\r\n    /**\r\n     * 設定\r\n     * @param {string} id - ID\r\n     * @param {string} name - 表示名称\r\n     */\r\n    setValue = (id,name)  => {\r\n        this.input.current.value = name;\r\n        this.inputId = id;\r\n    }\r\n\r\n    /**\r\n     * ID取得\r\n     * @returns 指定されているID\r\n     */\r\n    ID = ()  => {\r\n        return this.inputId;\r\n    }\r\n\r\n    /**\r\n     * 浮動コンポーネント表示\r\n     * <pre>\r\n     * テキスト下のコンポーネントを表示状態にする\r\n     * document.clickを監視\r\n     * </pre>\r\n     */\r\n    show() {\r\n        this.setState({\r\n            float:true\r\n        })\r\n        this.firstShow = true;\r\n        document.addEventListener(\"click\",this.handleDocumentClick);\r\n    }\r\n\r\n    /**\r\n     * 浮動コンポーネント非表示\r\n     * <pre>\r\n     * 浮動コンポーネントを非表示にし、\r\n     * 表示を取り消すように準備したイベントを取り消す\r\n     * </pre>\r\n     */\r\n    hide() {\r\n        this.setState({\r\n            float:false\r\n        })\r\n        document.removeEventListener(\"click\",this.handleDocumentClick);\r\n    }\r\n\r\n    /**\r\n     * 入力用のテキストイベント\r\n     * <pre>\r\n     * 浮動コンポーネントを表示する\r\n     * </pre>\r\n     * @param {Event} e - クリックイベント\r\n     */\r\n    handleInputFocus = (e) => {\r\n        this.show();\r\n    }\r\n\r\n    /**\r\n     * <pre>\r\n     * その他コンポーネントをクリックした場合、\r\n     * 浮動コンポーネントじゃない場合、非表示にする\r\n     * ※最初の描画の場合はOKにする\r\n     * </pre>\r\n     * @param {Event} e - クリックイベント \r\n     */\r\n    handleDocumentClick = (e) => {\r\n        if ( this.float.current.contains(e.target) ) {\r\n            return;\r\n        }\r\n        if ( this.firstShow && this.input.current.contains(e.target) ) {\r\n            this.firstShow = false;\r\n            return;\r\n        }\r\n        this.hide();\r\n    }\r\n\r\n    /**\r\n     * レンダリング\r\n     * <pre>\r\n     * 入力用のテキストと\r\n     * 非表示状態の浮動コンポーネント（内部のコンポーネント）を作成\r\n     * show()などで表示する。\r\n     * \r\n     * 浮動コンポーネント側からhide()などを呼び出してコントロールする\r\n     * </pre>\r\n     * @returns 入力用Form.Control\r\n     */\r\n    render() {\r\n\r\n        let floatStyle = {}\r\n        //TODO 本当はボーダーもコピーしたい\r\n        if ( this.state.float ) {\r\n          floatStyle = {\r\n            width: this.input.current.offsetWidth,\r\n            zIndex: this.input.current.style.zIndex + 10\r\n          };\r\n        }\r\n        \r\n        return (<>\r\n        <Form.Control type=\"text\" readOnly placeholder={this.props.placeholder} ref={this.input} onFocus={ (e) => this.handleInputFocus(e)}/>\r\n        { this.state.float &&\r\n        <div className=\"FloatComponent\" style={floatStyle} ref={this.float}>\r\n            {this.props.children}\r\n        </div>\r\n        }\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default FloatInput;","import React, { createRef } from \"react\";\r\nimport Tree from 'rc-tree';\r\nimport {Container} from \"react-bootstrap\";\r\nimport 'rc-tree/assets/index.css';\r\n\r\nimport FloatInput from \"../../components/FloatInput\";\r\n\r\nconst treeData = [\r\n  {\r\n    key: '0-0',\r\n    title: 'parent 1',\r\n    children: [\r\n      { key: '0-0-0', title: 'parent 1-1', children: [{ key: '0-0-0-0', title: 'parent 1-1-0' }] },\r\n      {\r\n        key: '0-0-1',\r\n        title: 'parent 1-2',\r\n        children: [\r\n          { key: '0-0-1-0', title: 'parent 1-2-0', disableCheckbox: true },\r\n          { key: '0-0-1-1', title: 'parent 1-2-1' },\r\n          { key: '0-0-1-2', title: 'parent 1-2-2' },\r\n          { key: '0-0-1-3', title: 'parent 1-2-3' },\r\n          { key: '0-0-1-4', title: 'parent 1-2-4' },\r\n          { key: '0-0-1-5', title: 'parent 1-2-5' },\r\n          { key: '0-0-1-6', title: 'parent 1-2-6' },\r\n          { key: '0-0-1-7', title: 'parent 1-2-7' },\r\n          { key: '0-0-1-8', title: 'parent 1-2-8' },\r\n          { key: '0-0-1-9', title: 'parent 1-2-9' },\r\n          { key: 1128, title: 1128 },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nclass View extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.treeRef = createRef();\r\n        this.treeInput =createRef();\r\n    }\r\n\r\n\r\n    handleSelect = (e) => {\r\n\r\n        //TODO データ検索をしやすくしておいた方がいい\r\n        console.log(\"start\");\r\n        let obj = this.searchTree(treeData,e[0]);\r\n        if ( obj === null ) {\r\n            //ない\r\n            return;\r\n        }\r\n\r\n        //親を選択して終了があるならこの条件はいらない\r\n        if ( obj.children === undefined ){\r\n            var current = this.treeInput.current;\r\n            current.setValue(obj.key,obj.title);\r\n            current.hide();\r\n        }\r\n    }\r\n\r\n    searchTree = (children,id) => {\r\n\r\n        if ( children === undefined ) {\r\n            return null;\r\n        }\r\n\r\n        for ( let idx in children ) {\r\n            var child = children[idx];\r\n            if ( child.key === id ) {\r\n                return child;\r\n            }\r\n            let obj = this.searchTree(child.children,id)\r\n            if ( obj !== null ) {\r\n               return obj;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<>\r\n        <FloatInput>\r\n            <Container>\r\n                AAa <br/> BBB\r\n            </Container>\r\n        </FloatInput>\r\n\r\n        <div>Other Component</div>\r\n\r\n        <FloatInput ref={this.treeInput}>\r\n          <Container style={ { minHeight:\"200px\"} }>\r\n              <Tree \r\n                ref={this.treeRef} \r\n                treeData={treeData} \r\n                onSelect={(e) => this.handleSelect(e) }\r\n                defaultExpandedKeys={[\"0-0\"]}\r\n                defaultSelectedKeys={[\"0-0\"]}\r\n                />\r\n          </Container>\r\n        </FloatInput>\r\n\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default View;","/**\r\n * @fileoverview \r\n * ページング用のコンポーネント\r\n */\r\nimport React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\n/**\r\n * ページングコンポーネント\r\n * <pre>\r\n * ページングを行う時にサーバサイドと連動しやすくする為のコンポーネント\r\n * </pre>\r\n * @example\r\n * <Paging />\r\n */\r\nclass Paging extends React.Component {\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @constructor\r\n     * @param {object} props - max,paging,onClick\r\n     */\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            display: props.max,\r\n            paging: {}\r\n        }\r\n        this.onClick = props.onClick\r\n    }\r\n\r\n    /**\r\n     * ページ数イベント\r\n     * @param {number} num - ページ数\r\n     */\r\n    handleClick = (num) => {\r\n        if (this.onClick !== undefined) {\r\n            this.onClick(num);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * レンダリング\r\n     * <pre>\r\n     * 指定された指定数を元にページングのページを表示\r\n     * </pre>\r\n     * @returns bootstrapのPagingタグ\r\n     */\r\n    render() {\r\n\r\n        let paging = this.props.paging;\r\n\r\n        if (paging.currentPage === undefined) {\r\n            paging = {\r\n                currentPage: 0,\r\n                numberOfPage: 0\r\n            }\r\n        }\r\n\r\n        let active = paging.currentPage;\r\n        let last = paging.numberOfPage;\r\n        let display = this.state.display;\r\n\r\n        let indent = Math.floor(display / 2);\r\n\r\n        let start = active - indent;\r\n        if (start <= 0) {\r\n            start = 1;\r\n        } else if (start >= last - display) {\r\n            start = last - display + 1;\r\n        }\r\n\r\n        let end = start + display - 1;\r\n        if (end > last) {\r\n            end = last;\r\n        }\r\n\r\n        var items = [];\r\n        for (let num = start; num <= end; num++) {\r\n            items.push(\r\n                <Pagination.Item key={num} active={num === active} onClick={(e) => this.handleClick(num)}>\r\n                    {num}\r\n                </Pagination.Item>\r\n            );\r\n        }\r\n\r\n        let prev = (active === 1);\r\n        let next = (active === last);\r\n\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={(e) => this.handleClick(1)} />\r\n                <Pagination.Prev disabled={prev} onClick={(e) => this.handleClick(active - 1)} />\r\n                {items}\r\n                <Pagination.Next disabled={next} onClick={(e) => this.handleClick(active + 1)} />\r\n                <Pagination.Last onClick={(e) => this.handleClick(last)} />\r\n            </Pagination>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Paging;","import React from \"react\";\r\n\r\nimport {Table,Button,Container} from \"react-bootstrap\";\r\nimport Paging from \"../../components/Paging\";\r\nimport DateTime from \"../../components/DateTime\";\r\nimport Select from \"../../components/Select\";\r\nimport API from \"../../../API\";\r\nimport {WriteErrorMessage} from \"../../../Layout\";\r\n\r\nclass Time extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.date = React.createRef();\r\n\r\n        this.limitValues = [];\r\n        this.limitValues[5] = 5;\r\n        this.limitValues[10] = 10;\r\n        this.limitValues[100] = 100;\r\n\r\n        this.timezoneList = {};\r\n        this.timezoneList[\"ACT\"]=\"Australia/Darwin(ACT)\";\r\n        this.timezoneList[\"AET\"]=\"Australia/Sydney(AET)\";\r\n        this.timezoneList[\"AGT\"]=\"America/Argentina/Buenos_Aires(AGT)\";\r\n        this.timezoneList[\"ART\"]=\"Africa/Cairo(ART)\";\r\n        this.timezoneList[\"AST\"]=\"America/Anchorage(AST)\";\r\n        this.timezoneList[\"BET\"]=\"America/Sao_Paulo(BET)\";\r\n        this.timezoneList[\"BST\"]=\"Asia/Dhaka(BST)\";\r\n        this.timezoneList[\"CAT\"]=\"Africa/Harare(CAT)\";\r\n        this.timezoneList[\"CNT\"]=\"America/St_Johns(CNT)\";\r\n        this.timezoneList[\"CST\"]=\"America/Chicago(CST)\";\r\n        this.timezoneList[\"CTT\"]=\"Asia/Shanghai(CTT)\";\r\n        this.timezoneList[\"EAT\"]=\"Africa/Addis_Ababa(EAT)\";\r\n        this.timezoneList[\"ECT\"]=\"Europe/Paris(ECT)\";\r\n        this.timezoneList[\"EST\"]=\"-05:00(EST)\";\r\n        this.timezoneList[\"HST\"]=\"-10:00(HST)\";\r\n        this.timezoneList[\"IET\"]=\"America/Indiana/Indianapolis(IET)\";\r\n        this.timezoneList[\"IST\"]=\"Asia/Kolkata(IST)\";\r\n        this.timezoneList[\"JST\"]=\"Asia/Tokyo(JST)\";\r\n        this.timezoneList[\"MIT\"]=\"Pacific/Apia(MIT)\";\r\n        this.timezoneList[\"MST\"]=\"-07:00(MST)\";\r\n        this.timezoneList[\"NET\"]=\"Asia/Yerevan(NET)\";\r\n        this.timezoneList[\"NST\"]=\"Pacific/Auckland(NST)\";\r\n        this.timezoneList[\"PLT\"]=\"Asia/Karachi(PLT)\";\r\n        this.timezoneList[\"PNT\"]=\"America/Phoenix(PNT)\";\r\n        this.timezoneList[\"PRT\"]=\"America/Puerto_Rico(PRT)\";\r\n        this.timezoneList[\"PST\"]=\"America/Los_Angeles(PST)\";\r\n        this.timezoneList[\"SST\"]=\"Pacific/Guadalcanal(SST)\";\r\n        this.timezoneList[\"VST\"]=\"Asia/Ho_Chi_Minh(VST)\";\r\n\r\n        this.timezone = \"JST\";\r\n\r\n        this.state = {\r\n            times : [],\r\n            paging : { \r\n                currentPage : 1,\r\n                numberOfDisplay : 5 \r\n            }\r\n        }\r\n\r\n        this.handleInsert = this.handleInsert.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.viewTimes(1,5);\r\n    }\r\n\r\n    viewTimes(num,max) {\r\n        let args = {\r\n            paging : {\r\n              currentPage:num,\r\n              numberOfDisplay:max\r\n            }\r\n        }\r\n        API.post(\"/api/demo/times/view\",resp => {\r\n            let rtn = resp.data.result;\r\n            this.setState({\r\n                times : rtn.times,\r\n                paging : rtn.paging\r\n            });\r\n        },args).catch( (err) => {\r\n            if ( API.isUnknownError(err) ) {\r\n              return;\r\n            }\r\n            WriteErrorMessage(err);\r\n        });\r\n    }\r\n\r\n    handleTimezone = (v) => {\r\n        this.timezone = v;\r\n    }\r\n\r\n    handleChange = (v) => {\r\n        //let limit = this.limitValues[v];\r\n        this.viewTimes(1,v);\r\n    }\r\n\r\n    handleInsert = () => {\r\n        let val = this.date.current.get();\r\n        let args = {\r\n            value : val,\r\n            zone : this.timezone,\r\n            paging : {\r\n              currentPage:1,\r\n              numberOfDisplay:this.state.paging.numberOfDisplay\r\n            }\r\n        }\r\n\r\n        API.post(\"/api/demo/times/register\",resp => {\r\n            let rtn = resp.data.result;\r\n            this.setState({\r\n                times : rtn.times,\r\n                paging : rtn.paging\r\n            });\r\n            this.date.current.set(new Date());\r\n        },args).catch( (err) => {\r\n            if ( API.isUnknownError(err) ) {\r\n                return;\r\n              }\r\n              WriteErrorMessage(err);\r\n        });\r\n\r\n    }\r\n\r\n    handleClicked = (p) => {\r\n        this.viewTimes(p,this.state.paging.numberOfDisplay);\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n    <Container>\r\n        <Select className=\"Paging-Timezone\" values={this.timezoneList} value={this.timezone} onChange={(v) => this.handleTimezone(v)}/>\r\n        <DateTime type=\"datetime\" ref={this.date} value={new Date().toString()}/>\r\n        <Button onClick={this.handleInsert}>追加</Button>\r\n    </Container>\r\n\r\n    <Container>\r\n\r\n        <Table striped bordered size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>値</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Date To Without</th>\r\n                <th>OffsetDateTime To With</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n        {this.state.times.map( (obj,idx) => {\r\n            return (\r\n            <tr key={idx}>\r\n                <td>{obj.id}</td>\r\n                <td>{obj.value}</td>\r\n                <td>{obj.date}</td>\r\n                <td>{obj.time}</td>\r\n                <td>{obj.dateToWithout}</td>\r\n                <td>{obj.offsetToWith}</td>\r\n            </tr>\r\n            )\r\n        })}\r\n\r\n          </tbody>\r\n        </Table>\r\n    </Container>\r\n\r\n    <Container style={ {display:\"flex\"} }>\r\n      <Select className=\"Paging-Limit\" values={this.limitValues} value={this.state.paging.numberOfDisplay}  onChange={ (v)=> this.handleChange(v)}/>\r\n      <Paging paging={this.state.paging} max={5} onClick={(p) => this.handleClicked(p)} />\r\n    </Container>\r\n        </>)\r\n    }\r\n\r\n}\r\n\r\nexport default Time;","import React from \"react\";\r\n\r\nimport {\r\n    Modal,Button\r\n} from \"react-bootstrap\";\r\nimport { ShowConfirm } from \"../../../Dialog\";\r\n\r\nclass Dialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show : false\r\n        }\r\n    }\r\n\r\n    show = (name) => {\r\n        this.setState({\r\n            show : true,\r\n            brightness:1,\r\n            title : name + \"から呼び出し\",\r\n            message:\"更新でダイアログの二重起動を行います。\"\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            show : false\r\n        })\r\n    }\r\n\r\n    handleUpdate = () => {\r\n\r\n        let self = this;\r\n        this.setState({\r\n          brightness : 0.5\r\n        })\r\n\r\n        ShowConfirm(\"２重起動\",\"２重起動側\").then( () => {\r\n          self.handleClose();\r\n        }).finally(function() {\r\n          self.setState({\r\n            brightness : 1\r\n          })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n<Modal show={this.state.show} style={ { filter: \"brightness(\" + this.state.brightness + \")\"} }onHide={this.handleClose} backdrop=\"static\">\r\n  <Modal.Header closeButton>\r\n\t  <Modal.Title>{this.state.title}</Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body style={ {height:\"200px\"} }>{this.state.message}</Modal.Body>\r\n  <Modal.Footer>\r\n    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n        とじる\r\n    </Button>\r\n    <Button variant=\"primary\" onClick={this.handleUpdate}>\r\n        更新\r\n    </Button>\r\n  </Modal.Footer>\r\n</Modal>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default Dialog;","import React, { createRef } from \"react\";\r\n\r\nimport {\r\n    Container, Row,Col,Stack,\r\n    Card,\r\n    Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport { ShowInformation,ShowConfirm } from \"../../../Dialog\";\r\nimport { ClearMessage, WriteMessage } from \"../../../Layout\";\r\n\r\nimport DoubleDialog from \"./Dialog\"\r\n\r\n\r\nclass View extends React.Component {\r\n\r\n    constructor(props)  {\r\n        super(props)\r\n        this.state = {\r\n            cards : []\r\n        }\r\n        this.clickCount = 0;\r\n\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.dialog = createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let cards = [];\r\n\r\n        cards.push(this.createObj(1,\"A\",0));\r\n        cards.push(this.createObj(2,\"B\",1));\r\n        cards.push(this.createObj(3,\"C\",2));\r\n        cards.push(this.createObj(4,\"D\",0));\r\n\r\n        this.setState({\r\n            cards : cards\r\n        })\r\n\r\n    }\r\n\r\n    createObj = ( id,name,state ) => {\r\n        return {\r\n            id : id,\r\n            name : name,\r\n            state : state\r\n        }\r\n    }\r\n\r\n    changeColor = ( obj,state ) => {\r\n        ClearMessage();\r\n        if ( obj.state === state ) {\r\n            //取り消し\r\n            obj.state = 0;\r\n        } else {\r\n            obj.state = state;\r\n        }\r\n\r\n        let updateCard = this.state.cards.map( (elm) => {\r\n            if ( obj.id === elm.id ) {\r\n                elm.state = obj.state;\r\n            }\r\n            return elm;\r\n        });\r\n\r\n        this.setState({\r\n            cards : updateCard\r\n        })\r\n    }\r\n\r\n    handleSingle = (e,zz,obj,state) => {\r\n        this.clickCount++;\r\n        if ( this.clickCount < 2 ) {\r\n            setTimeout(() => {\r\n                if ( this.clickCount > 1 ) {\r\n                    this.changeColor(obj,state);\r\n                } else {\r\n                    this.showDialog(obj,zz)\r\n                }\r\n                this.clickCount = 0;\r\n            },300)\r\n        }\r\n    }\r\n\r\n    showDialog = (obj,zz) => {\r\n        ClearMessage();\r\n        switch (zz) {\r\n            case \"info\":\r\n                ShowInformation(obj.name + \"の呼び出し\",\"押したよ\")\r\n                break;\r\n            case \"confirm\":\r\n                ShowConfirm(obj.name + \"の呼び出し\", \"はいを押したらメッセージ\").then( () => {\r\n                    WriteMessage(\"YES!\",\"success\");\r\n                });\r\n                break;\r\n            case \"original\":\r\n                this.dialog.current.show(obj.name);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    createClassName = (obj) => {\r\n        let base = \"Dialogs-Card\";\r\n        switch ( obj.state ) {\r\n            case 1:\r\n                base += \" Dialogs-State1\";\r\n                break;\r\n            case 2:\r\n                base += \" Dialogs-State2\";\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n        return base;\r\n    }\r\n\r\n    render() {\r\n    return (<>\r\n    <Container>\r\n        <Row>\r\n\r\n        {this.state.cards.map( (obj) => {\r\n            return (<>\r\n            <Col>\r\n        <Card className={this.createClassName(obj)}>\r\n\r\n            <Card.Title>{obj.name}</Card.Title>\r\n            <Stack direction=\"horizontal\" gap={3}>\r\n\r\n            <Button variant=\"primary\" className=\"Dialogs-Button\"\r\n                    onClick={(e) => this.handleSingle(e,\"info\",obj,0)}> \r\n                Info\r\n            </Button>\r\n\r\n            <Button variant=\"success\" className=\"Dialogs-Button\"\r\n                    onClick={(e) => this.handleSingle(e,\"confirm\",obj,1)}> \r\n                Confirm\r\n            </Button>\r\n\r\n            <Button variant=\"danger\" className=\"Dialogs-Button\"\r\n                    onClick={(e) => this.handleSingle(e,\"original\",obj,2)}> \r\n                Original\r\n            </Button>\r\n            </Stack>\r\n        </Card>\r\n            </Col>\r\n            </>);\r\n        })}\r\n        </Row>\r\n    </Container>\r\n\r\n    <DoubleDialog ref={this.dialog}/>\r\n    </>)}\r\n}\r\n\r\nexport default View;","/**\r\n * @fileoverview \r\n * 組織選択用のファイルです。\r\n */\r\nimport React from \"react\";\r\nimport Tree from 'rc-tree';\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nimport FloatInput from \"./FloatInput\";\r\n\r\n/**\r\n * 組織選択コンポーネント\r\n * <pre>\r\n * FloatInputを作成し、指定したツリーデータを描画\r\n * ツリー選択した値を取得できる\r\n * </pre>\r\n * @example\r\n * \r\n * <Organization/>\r\n * \r\n */\r\nclass Organization extends React.Component {\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {object} props - 指定なし\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.treeRef = React.createRef();\r\n    this.treeInput = React.createRef();\r\n    this.state = {\r\n      tree : []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ツリー設定\r\n   * <pre>\r\n   * ツリーデータを作成します。\r\n   * </pre>\r\n   * @param {object} tree \r\n   */\r\n  set = (tree) => {\r\n    this.setState({\r\n      tree : [tree],\r\n      selectKey : tree.key\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 選択ID取得\r\n   * @returns 選択ID\r\n   */\r\n  get = () => {\r\n    return this.treeInput.current.ID();\r\n  }\r\n\r\n  /**\r\n   * キー設定\r\n   * @param {string} key - ツリーの選択ID\r\n   */\r\n  setKey = (key) => {\r\n    this.setState({\r\n      selectKey : key\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ツリー選択時イベント\r\n   * <pre>\r\n   * ツリーデータから選択したデータから取得し\r\n   * 選択したデータの名称をテキストコンポーネントに表示\r\n   * \r\n   * ツリーを非表示にする\r\n   * </pre>\r\n   * @param {Event} e - イベント\r\n   */\r\n  handleSelect = (e) => {\r\n\r\n    var treeData = this.state.tree;\r\n    //TODO データ検索をしやすくしておいた方がいい\r\n    console.log(\"start:\" + e[0]);\r\n    let obj = this.searchTree(treeData,e[0]);\r\n    if ( obj === null ) {\r\n      //ない\r\n      return;\r\n    }\r\n\r\n\r\n    //親を選択して終了があるならこの条件はいらない\r\n    if ( obj.children === null ){\r\n      var current = this.treeInput.current;\r\n      this.setKey(obj.key);\r\n      current.setValue(obj.key,obj.title);\r\n      current.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ツリー検索(再帰)\r\n   * @param {Array} children - データ配列\r\n   * @param {string} id - 検索IDに\r\n   * @returns 検索したIDのオブジェクト\r\n   */\r\n  searchTree = (children,id) => {\r\n    if ( children === undefined ) {\r\n      return null;\r\n    }\r\n    for ( let idx in children ) {\r\n      var child = children[idx];\r\n\r\n      if ( child.key === id ) {\r\n        return child;\r\n      }\r\n      let obj = this.searchTree(child.children,id)\r\n      if ( obj !== null ) {\r\n        return obj;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * <pre>\r\n   * FloatInputを表示し、指定したツリーデータを表示\r\n   * </pre>\r\n   * @returns ツリーデータを表示するFloatInputコンポーネント\r\n   */\r\n  render() {\r\n    return <>\r\n    <FloatInput ref={this.treeInput}>\r\n      <Container style={ { minHeight:\"200px\"} }>\r\n        <Tree \r\n          ref={this.treeRef} \r\n          treeData={this.state.tree} \r\n          onSelect={(e) => this.handleSelect(e) }\r\n          defaultExpandedKeys={[this.state.selectKey]}\r\n          defaultSelectedKeys={[this.state.selectKey]}\r\n        />\r\n      </Container>\r\n    </FloatInput> \r\n    </>}\r\n}\r\n\r\nexport default Organization;","/**\r\n * @fileoverview \r\n * サーバサイド画像表示用のファイル\r\n */\r\nimport React from \"react\"\r\n\r\nimport Package from \"../../../package.json\";\r\n\r\nconst imageURL = \"images/\"\r\n\r\n/**\r\n * URLエンドポイント取得\r\n * @private\r\n * @returns エンドポイント\r\n */\r\nfunction getEndpoint() {\r\n    let home = Package.homepage;\r\n    let endpoint = Package.proxy + home;\r\n    return endpoint;\r\n}\r\n\r\n/**\r\n * 画像URL取得\r\n * <pre>\r\n * エンドポイントを利用してURLを作成\r\n * </pre>\r\n * @private\r\n * @param {string} id - 画像ID\r\n * @returns 画像URL\r\n */\r\nfunction getImageURL(id) {\r\n    var endpoint = getEndpoint();\r\n    var url = endpoint + imageURL + id;\r\n    return url;\r\n}\r\n\r\n/**\r\n * 画像コンポーネント\r\n * <pre>\r\n * 指定するパスはサーバサイドによる\r\n * </pre>\r\n * @example\r\n * <Images src=\"faces/AAA\" />\r\n */\r\nclass Images extends React.Component {\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * @constructor\r\n     * @param {object} props - src : 画像ID(pathイメージ)\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.src = getImageURL(props.src);\r\n    }\r\n\r\n    /**\r\n     * レンダリング\r\n     * <pre>\r\n     * 指定してあるsrc、classNameでimgタグを作成j\r\n     * URLは内部関数getImageURL()により生成\r\n     * </pre>\r\n     * @returns imgタグ\r\n     */\r\n    render() {\r\n        return (<>\r\n          <img src={this.src} alt={this.props.src} className={this.props.className} />\r\n        </>)\r\n    }\r\n}\r\n\r\n/**\r\n * 画像URL取得\r\n * @param {string} id - 画像ID\r\n * @returns 画像URL\r\n */\r\nexport function GetImageURL(id) {\r\n    return getImageURL(id);\r\n}\r\n\r\nexport default Images;","import React from \"react\";\r\nimport {Container,Row,Col, Button,\r\n        Table} from \"react-bootstrap\";\r\n\r\nimport DateTime from \"../../components/DateTime\";\r\nimport Organization from \"../../components/Organization\";\r\nimport Images from \"../../components/Images\";\r\n\r\nimport API from \"../../../API\";\r\nimport {WriteErrorMessage} from \"../../../Layout\";\r\nimport Util from \"../../../Util\";\r\n\r\nclass View extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.targetDate = React.createRef();\r\n        this.org = React.createRef();\r\n\r\n        this.state = {\r\n            operationList : [],\r\n            workersList : []\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n      let date = this.targetDate.current.get();\r\n      let org = this.org.current.get();\r\n      let args = {\r\n        organization: org,\r\n        day: date\r\n      }\r\n\r\n      API.post(\"/api/demo/worker/day\",resp => {\r\n        var result = resp.data.result;\r\n        var operationList = result.operationList;\r\n        var workers = result.workersList;\r\n\r\n        console.log(result)\r\n\r\n        this.setState({\r\n            operationList : operationList,\r\n            workersList : workers\r\n        })\r\n\r\n      },args).catch( (err) => {\r\n        if ( API.isUnknownError(err) ) {\r\n          return;\r\n        }\r\n        WriteErrorMessage(err);\r\n      });\r\n    }\r\n\r\n    componentDidMount() {\r\n      let ref = this.targetDate.current;\r\n      let today = new Date();\r\n      ref.set(today);\r\n\r\n      let args = {\r\n        \"day\" : Util.formatDate(today)\r\n      };\r\n\r\n      API.post(\"/api/demo/day/all\",resp => {\r\n        var result = resp.data.result;\r\n        let arr = result.days;\r\n\r\n        this.targetDate.current.setStyles(arr);\r\n        this.org.current.set(result.org);\r\n\r\n      },args).catch( (err) => {\r\n        if ( API.isUnknownError(err) ) {\r\n          return;\r\n        }\r\n        WriteErrorMessage(err);\r\n      })\r\n    }\r\n\r\n    render() {\r\n      return <>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <DateTime type=\"date\" ref={this.targetDate} onChange={this.handleDate}/>\r\n            </Col>\r\n            <Col>\r\n              <Organization ref={this.org} onChange={this.handleOrganization}/>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={this.handleSearch}>Search</Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <td>-</td>\r\n              {this.state.operationList.map( (obj,idx) => {\r\n                  return (\r\n                      <td key={idx}>{obj.operation.name}</td>\r\n                  );\r\n              })}\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {this.state.workersList.map( (elm,idx) => {\r\n\r\n                let cols = [];\r\n                elm.workers.forEach( (elm) => {\r\n                  var elements = <td></td>\r\n                  if ( elm !== null ) {\r\n                      elements = <td>{\r\n                          elm.map( (worker) => {\r\n                              return (<div><Images className=\"faceImage\" src={\"faces/\" + worker.userID} /><br/>{worker.name}</div>)\r\n                          })\r\n                          }\r\n                      </td>\r\n                  }\r\n                  cols.push(elements);\r\n                });\r\n\r\n                return (\r\n                <tr>\r\n                    <td>{idx + 1}</td>\r\n                    {cols}\r\n                </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n\r\n        </>\r\n    }\r\n}\r\nexport default View;","/**\r\n * @fileoverview \r\n * 入力グループを表示するコンポーネント用のファイルです。\r\n * 入力グループとは\r\n * 複数選択のデータをテキストボックス内に表示するような場合に利用するものになります。\r\n */\r\nimport React from \"react\";\r\n\r\nimport {Container,Row,Col} from \"react-bootstrap\";\r\n\r\nimport \"../../css/Main.css\";\r\n\r\n/**\r\n * インプットグループ\r\n * <pre>\r\n * key,value形式のオブジェクトを渡すことで一覧表示を行います。\r\n * </pre>\r\n * @example\r\n * <InputGroup/>\r\n * \r\n * とすることでテキストボックスのような描画になります。\r\n * set()で対象オブジェクトを個別にボックス表示します。\r\n * 個々のデータを削除することもできますし、内容のデータを取得することもできます。\r\n * get(),set()\r\n */\r\nclass InputGroup extends React.Component {\r\n\r\n    /**\r\n     * コンストラクタ\r\n     * <pre>\r\n     * dataを空にする\r\n     * </pre>\r\n     * @param {object} props - classNameのみ\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    /**\r\n     * データ取得\r\n     * @returns {Array} データの配列\r\n     */\r\n    get = () => {\r\n        var rtn = [];\r\n        this.state.data.forEach( (elm) => {\r\n            rtn.push(elm.key);\r\n        });\r\n        return rtn;\r\n    }\r\n\r\n    /**\r\n     * データ設定\r\n     * @param {Array} obj - データ配列\r\n     */\r\n    set = (obj) => {\r\n        this.setState({data:obj});\r\n    }\r\n\r\n    /**\r\n     * データの追加\r\n     * @param {string} id - ID(key)\r\n     * @param {string} name - 名称(value)\r\n     */\r\n    add = (id,name) => {\r\n        var data = this.state.data;\r\n        data.push({\r\n            key:id,\r\n            value:name\r\n        });\r\n        this.setState({data:data});\r\n    }\r\n\r\n    /**\r\n     * データ削除\r\n     * @param {string} id - 指定ID\r\n     */\r\n    remove = (id) => {\r\n        var data = this.state.data;\r\n        var n = data.filter( (obj) => {\r\n            return id !== obj.key;\r\n        });\r\n        if ( data.length === n.length ) {\r\n            console.log(\"not found:\" + id);\r\n        }\r\n        this.setState({data:n});\r\n    }\r\n\r\n    /**\r\n     * レンダリング\r\n     * <pre>\r\n     * divを作成し、内部にデータを元にしたオブジェクトを描画\r\n     * データのボタンクリックを押すとそのデータのみ削除する\r\n     * </pre>\r\n     * @returns input.textライクなdivタグ(className指定)\r\n     */\r\n    render() {\r\n        return (<>\r\n        <div className={this.props.className}>\r\n          <Container>\r\n            <Row>\r\n\r\n          { this.state.data.map( (elm,idx) => {\r\n              return <Col key={idx} className=\"InputGroup-Data\">\r\n              <div className=\"InputGroup-Inner\">\r\n              <div className=\"InputGroup-Value\"> {elm.value}({elm.key}) </div>\r\n              <button type=\"button\" className=\"btn-close InputGroup-Close\" aria-label=\"Close\" onClick={() => this.remove(elm.key)}></button>\r\n              </div>\r\n              </Col>\r\n          })\r\n          }\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default InputGroup;","/**\r\n * @fileoverview \r\n * ユーザ検索用のダイアログファイル\r\n */\r\nimport React from \"react\";\r\nimport { Container, Table, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Select from \"./components/Select\"\r\nimport Paging from \"./components/Paging\"\r\nimport API from \"../API\"\r\nimport { WriteErrorMessage } from \"../Layout\";\r\n\r\n/**\r\n * ユーザ件s買うダイアログ\r\n * @example\r\n * <UserSearch onSelect={func}/>\r\n */\r\nclass UserSearch extends React.Component {\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n      mode: \"view\",\r\n      data: [],\r\n      checked: [],\r\n      paging: {\r\n        currentPage: 1,\r\n        numberOfDisplay: 5\r\n      }\r\n    }\r\n\r\n    this.userId = React.createRef();\r\n    this.userName = React.createRef();\r\n    this.date = props.date;\r\n    this.belong = props.belong;\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleChangeDisplay = this.handleChangeDisplay.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  /**\r\n   * 表示初期化\r\n   * @param {boolean} show - 表示フラグ\r\n   * @param {string} mode - 表示モード\r\n   * @param {Array} checked - 選択データ\r\n   */\r\n  clear(show, mode = \"view\", checked = []) {\r\n    var limitValues = [];\r\n    limitValues[5] = 5;\r\n    limitValues[10] = 10;\r\n    limitValues[100] = 100;\r\n    this.setState({\r\n      show: show,\r\n      mode: mode,\r\n      data: [],\r\n      checked: checked,\r\n      paging: {\r\n        currentPage: 1,\r\n        numberOfDisplay: 5\r\n      },\r\n      limitValues: limitValues\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 選択データ取得\r\n   * @returns 選択データ \r\n   */\r\n  get() {\r\n    return this.state.checked;\r\n  }\r\n\r\n  /**\r\n   * ダイアログ表示\r\n   * @param {string} mode - モード\r\n   */\r\n  show(mode) {\r\n    this.clear(true, this.props.mode);\r\n    this.search(this.state.paging);\r\n  }\r\n\r\n  /**\r\n   * ダイアログ非表示\r\n   */\r\n  hide() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  /**\r\n   * 閉じるイベント\r\n   */\r\n  handleClose() {\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * 検索\r\n   * @param {object} paging - ページングデータ\r\n   */\r\n  search(paging) {\r\n\r\n    if (paging === undefined) {\r\n      paging = {\r\n        currentPage: 1,\r\n        numberOfDisplay: 5\r\n      }\r\n    }\r\n\r\n    var id = \"\";\r\n    var name = \"\";\r\n\r\n    var idObj = this.userId.current;\r\n    if (idObj !== null) {\r\n      id = idObj.value;\r\n    }\r\n    var nameObj = this.userName.current;\r\n    if (nameObj !== null) {\r\n      name = nameObj.value;\r\n    }\r\n\r\n    var args = {\r\n      id: id,\r\n      name: name,\r\n      paging: paging\r\n    }\r\n\r\n    API.post(\"/api/demo/users/search\", resp => {\r\n      let rtn = resp.data.result;\r\n      this.setState({\r\n        data: rtn.users,\r\n        paging: rtn.paging\r\n      })\r\n      var rows = document.querySelector(\"#rowdata\");\r\n      var boxes = rows.querySelectorAll(\"input.userSelect\");\r\n\r\n      boxes.forEach((elm) => {\r\n        elm.checked = false;\r\n        this.state.checked.forEach((e) => {\r\n          if (e.id === elm.getAttribute(\"data-id\")) {\r\n            elm.checked = true;\r\n          }\r\n        })\r\n      })\r\n    }, args).catch((err) => {\r\n      if (API.isUnknownError(err)) {\r\n        return;\r\n      }\r\n      WriteErrorMessage(err);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 検索クリックイベント\r\n   */\r\n  handleSearch() {\r\n    this.search();\r\n  }\r\n\r\n  /**\r\n   * 表示数の変更イベント\r\n   * @param {number} p 指定表示数\r\n   */\r\n  handleChangeDisplay(p) {\r\n    var paging = this.state.paging;\r\n    paging.numberOfDisplay = p;\r\n    paging.currentPage = 1;\r\n    this.search(paging);\r\n  }\r\n\r\n  /**\r\n   * ページ番号変更\r\n   * @param {number} p - ページ番号\r\n   */\r\n  handlePageClick(p) {\r\n    var paging = this.state.paging;\r\n    paging.currentPage = p;\r\n\r\n    //全選択をクリア\r\n    var all = document.querySelector(\"#allSelect\");\r\n    all.checked = false;\r\n\r\n    this.search(paging);\r\n  }\r\n\r\n  /**\r\n   * 選択クリックイベント\r\n   */\r\n  handleSelect() {\r\n    var func = this.props.onSelect;\r\n    if (func !== undefined) {\r\n      func(this.state.checked);\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * チェックボックス選択\r\n   */\r\n  handleCheck(e, elm) {\r\n    var check = this.getCheck(e.target)\r\n    if (e.target !== check) {\r\n      e.preventDefault();\r\n      check.checked = !check.checked;\r\n    }\r\n    var checked = this.state.checked;\r\n    if (check.checked) {\r\n      checked.push(elm);\r\n    } else {\r\n      checked.filter((f) => {\r\n        if (f.id === elm.id) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    }\r\n    this.setState({ checked: checked });\r\n  }\r\n\r\n  /**\r\n   * 全選択チェック\r\n   */\r\n  handleAllCheck(e) {\r\n    var check = this.getCheck(e.target);\r\n    if (e.target !== check) {\r\n      e.preventDefault();\r\n      check.checked = !check.checked;\r\n    }\r\n\r\n    var rows = document.querySelector(\"#rowdata\");\r\n    var boxes = rows.querySelectorAll(\"input.userSelect\");\r\n    boxes.forEach((elm) => {\r\n      elm.checked = check.checked;\r\n    })\r\n\r\n    var data = this.state.data;\r\n    var checked = this.state.checked;\r\n    checked = checked.filter((f) => {\r\n      var rtn = true;\r\n      data.forEach((g) => {\r\n        if (g.id === f.id) {\r\n          rtn = false;\r\n        }\r\n      })\r\n      return rtn;\r\n    });\r\n\r\n    if (check.checked) {\r\n      data.forEach((e) => {\r\n        checked.push(e);\r\n      })\r\n    }\r\n    this.setState({ checked: checked });\r\n  }\r\n\r\n  /**\r\n   * 選択コンポーネントの取得\r\n   * @param {element} elm - イベント発生オブジェクト \r\n   * @returns 選択したInputタグ\r\n   */\r\n  getCheck(elm) {\r\n    var target = elm;\r\n    while (true) {\r\n      var input = target.querySelector(\"input\");\r\n      if (input === null) {\r\n        target = target.parentElement;\r\n      } else {\r\n        return input;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * <pre>\r\n   * ステータスにより表示、非表示を切り替える\r\n   * 選択時、指定されているデータを呼び出し側で処理する\r\n   * チェックデータの処理は各イベントによる\r\n   * </pre>\r\n   * @returns ユーザ検索用のModal \r\n   */\r\n  render() {\r\n    return (<>\r\n      <Modal dialogClassName=\"UserSearch\" show={this.state.show} onHide={this.handleClose} centerd=\"true\" backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title as=\"h6\">User Search</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form className=\"d-flex\">\r\n            <Row>\r\n              <Col xs=\"1\" className=\"d-flex align-items-center\">\r\n                <Form.Label> ID: </Form.Label>\r\n              </Col>\r\n              <Col xs=\"4\">\r\n                <Form.Control type=\"text\" ref={this.userId} />\r\n              </Col>\r\n              <Col xs=\"1\" className=\"d-flex align-items-center\">\r\n                <Form.Label> Name: </Form.Label>\r\n              </Col>\r\n              <Col xs=\"4\">\r\n                <Form.Control type=\"text\" ref={this.userName} />\r\n              </Col>\r\n              <Col xs=\"2\">\r\n                <Button onClick={this.handleSearch}>Search</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n\r\n          <Table className=\"table-striped table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"small small-line\">\r\n                  <div className=\"form-check\">\r\n                    <input id=\"allSelect\" className=\"form-check-input\" type=\"checkbox\" onClick={(e) => this.handleAllCheck(e)} />\r\n                  </div>\r\n                </th>\r\n                <th className=\"small small-line\">ID</th>\r\n                <th className=\"small small-line\">Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"rowdata\">\r\n              {this.state.data.map((elm, idx) => {\r\n                return (\r\n                  <tr key={idx} onClick={(e) => this.handleCheck(e, elm)}>\r\n                    <td className=\"small small-line\">\r\n                      <div className=\"form-check\">\r\n                        <input data-id={elm.id} className=\"form-check-input userSelect\" type=\"checkbox\" />\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"small small-line\">{elm.id}</td>\r\n                    <td className=\"small small-line\">{elm.name}</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <Container style={{ display: \"flex\" }}>\r\n            <Select className=\"Paging-Limit\" values={this.state.limitValues} value={this.state.paging.numberOfDisplay} onChange={(v) => this.handleChangeDisplay(v)} />\r\n            <Paging paging={this.state.paging} max={5} onClick={(p) => this.handlePageClick(p)} />\r\n          </Container>\r\n\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>Close</Button>\r\n          <Button variant=\"primary\" onClick={this.handleSelect}>SELECT</Button>\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n    </>)\r\n  }\r\n}\r\n\r\nexport default UserSearch;","import React from \"react\";\r\n\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nimport InputGroup from \"../../components/InputGroup\";\r\nimport UserSearch from \"../../UserSearch\";\r\n\r\nclass UserSearchView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.users = React.createRef();\r\n        this.dialog = React.createRef();\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.users.current.set([]);\r\n    }\r\n\r\n    handleSelect(data) {\r\n        var rowdata = [];\r\n        data.forEach((elm) => {\r\n            var obj = {\r\n                key : elm.id,\r\n                value : elm.name\r\n            }\r\n            rowdata.push(obj);\r\n        })\r\n        this.users.current.set(rowdata);\r\n    }\r\n\r\n    handleClick() {\r\n        this.dialog.current.show(\"search\",\"\");\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        <InputGroup className=\"InputGroup-Frame\" ref={this.users}></InputGroup>\r\n        <UserSearch ref={this.dialog} onSelect={this.handleSelect}></UserSearch>\r\n        <Button onClick={this.handleClick}>Search</Button>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default UserSearchView;","/**\r\n * @fileoverview \r\n * 各画面での遷移を記述するファイルです。\r\n */\r\nimport { useEffect } from \"react\";\r\nimport {  Routes,Route,Navigate } from \"react-router-dom\";\r\n\r\nimport Login    from './Login';\r\nimport Message  from './Message';\r\nimport Menu     from './Menu';\r\n\r\n/** 以下はデモ用のページ */\r\nimport ToDo     from './Demo/Todo/View';\r\nimport DateView from './Demo/DateTime/View';\r\nimport PlanView from './Demo/Plan/View';\r\nimport PlanInput from './Demo/Plan/Input';\r\nimport FloatingView from './Demo/Floating/View';\r\nimport PagingView from './Demo/Paging/View';\r\nimport Dialogs from './Demo/Dialogs/View';\r\nimport Operation from './Demo/Operation/View';\r\nimport Users from './Demo/UserSearch/View';\r\n\r\nimport {ChangeTitle,ClearMessage,SetBreadcrumbs} from \"../Layout\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../css/Main.css\";\r\n\r\n/**\r\n * 全ページRoutes\r\n * <pre>\r\n * index.jsから呼び出されるベースのコンポーネント群\r\n * URLでまとめる場合は別コンポーネントにしてください。\r\n * </pre>\r\n * @namespace Pages\r\n * @returns Routesタグ\r\n * @example \r\n *  Login コンポーネントに飛ばす場合\r\n *  id に画面IDを指定する\r\n *  <Route path=\"/\"            element={<Page id=\"LOGIN\"><Login /></Page>} />\r\n * \r\n *  デモ用のURLを追加して他のコンポーネント群を読み込む\r\n *  <Route path=\"/pages/demo/*\"     element={<DemoPages/>}/>\r\n * \r\n *  該当しないもの（他すべて）はerrorページに飛ばす\r\n *  <Route path=\"*\" element={<Navigate to=\"/error/PRFN98M000\"/>} />\r\n */\r\nconst Pages =() => {\r\n    return (<>\r\n  <Routes>\r\n    <Route path=\"/\"            element={<Page id=\"LOGIN\"><Login /></Page>} />\r\n    <Route path=\"/pages/demo/*\"     element={<DemoPages/>}/>\r\n    <Route path=\"/message/:id\" element={<Page id=\"MESSAGE\"><Message type=\"success\" /></Page>} />\r\n    <Route path=\"/error/:id\"   element={<Page id=\"ERROR\"><Message type=\"danger\" /></Page>} />\r\n  </Routes>\r\n    </>);\r\n}\r\n\r\n/**\r\n * デモ用ページ群\r\n * @namespace Pages\r\n * @param {object} props \r\n * @returns Routesタグ\r\n */\r\nconst DemoPages = (props) => {\r\n    return (<>\r\n  <Routes>\r\n    <Route path=\"menu\" element={\r\n      <Page id=\"MENU\" crumbs={[]}>\r\n        <Menu />\r\n      </Page>\r\n    }/>\r\n    <Route path=\"todo/\" element={\r\n      <Page id=\"TODO\" crumbs={[]}>\r\n        <ToDo/>\r\n      </Page>\r\n    }/>\r\n    <Route path=\"date/\" element={\r\n      <Page id=\"DATE\" crumbs={[]}>\r\n        <DateView/>\r\n      </Page>\r\n    }/>\r\n    <Route path=\"floating/\" element={\r\n      <Page id=\"FLOATING\" crumbs={[]}>\r\n        <FloatingView/>\r\n      </Page>\r\n    }/>\r\n    <Route path=\"plan/\" element={\r\n      <Page id=\"PLAN\" crumbs={[]}>\r\n        <PlanView/>\r\n      </Page>\r\n    }/>\r\n    <Route path=\"plan/input/:date\" element={\r\n      <Page id=\"PLANINPUT\" crumbs={[createCrumbs(\"PLAN\",\"/pages/plan/\")]}>\r\n        <PlanInput/>\r\n      </Page>\r\n    }/>\r\n    <Route path=\"paging/\" element={\r\n      <Page id=\"PAGING\" crumbs={[]}>\r\n        <PagingView/>\r\n      </Page>\r\n    }/>\r\n    <Route path=\"dialogs/\" element={\r\n      <Page id=\"DIALOGS\" crumbs={[]}>\r\n        <Dialogs/>\r\n      </Page>\r\n    }/>\r\n\r\n    <Route path=\"operation/\" element={\r\n      <Page id=\"OPERATION\" crumbs={[]}>\r\n        <Operation/>\r\n      </Page>\r\n    }/>\r\n\r\n    <Route path=\"users/\" element={\r\n      <Page id=\"USERS\" crumbs={[]}>\r\n        <Users/>\r\n      </Page>\r\n    }/>\r\n  </Routes>\r\n  </>);\r\n}\r\n\r\nconst createCrumbs = (id,link) => {\r\n  var rtn = {};\r\n  rtn.id = id;\r\n  rtn.link = link;\r\n  return rtn;\r\n}\r\n\r\n/**\r\n * Page表示\r\n * <pre>\r\n * このコンポーネントを利用すると\r\n * パンくずとタイトルをIDから自動設定します。\r\n * </pre>\r\n * @memberOf Pages\r\n * @param {object} props - 指定プロパティ\r\n * @returns props.children\r\n * @example\r\n *  パンくずは メニュー→真ん中→自分 になりますので\r\n *  createCrumbs()でidとURLを指定した配列を設定\r\n *  <Page id=\"PLANINPUT\" crumbs={[createCrumbs(\"PLAN\",\"/pages/plan/\")]}>\r\n */\r\nconst Page = (props) => {\r\n\r\n  let crumbs = [createCrumbs(\"MENU\",\"/pages/menu\")];\r\n  let url = document.location.href;\r\n\r\n  //メニューかを判定\r\n  if ( url.indexOf(\"/pages/menu\") === -1 ) {\r\n    let target = props.crumbs;\r\n    if ( target !== undefined ) {\r\n      crumbs = crumbs.concat(target);\r\n    }\r\n    //自分自身を設定\r\n    crumbs.push(createCrumbs(props.id,props.link));\r\n  }\r\n\r\n  useEffect(() => {\r\n    ClearMessage();\r\n    ChangeTitle(props.id);\r\n    SetBreadcrumbs(crumbs);\r\n  })\r\n  return (<>{props.children}</>)\r\n}\r\n\r\nexport default Pages;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"react-app-polyfill/stable\";\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CookiesProvider } from \"react-cookie\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Layout   from './Layout';\r\nimport Pages from \"./pages/Pages\"\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider> \r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Layout> \r\n          <Pages></Pages>\r\n        </Layout>\r\n      </Router>\r\n    </CookiesProvider> \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","/**\r\n * @fileoverview \r\n * このファイルはユーティリティ用のクラスです。\r\n * 業務的に共通なロジックをstaticメソッドで記述します。\r\n */\r\n\r\n/**\r\n * ユーティリティクラス\r\n * \r\n */\r\nclass Util {\r\n\r\n  /**\r\n   * フォーマット日付変換\r\n   * @param {string} date - 日付(yyyy-mm-dd形式)\r\n   * @returns Date型\r\n   */\r\n  static formatTime(date) {\r\n    let d = new Date(Date.parse(date));\r\n    return this.zeroPadding(d.getHours(),2) + \":\" + \r\n              this.zeroPadding(d.getMinutes(),2);\r\n  }\r\n\r\n  /**\r\n   * Date型フォーマット文字列取得\r\n   * @param {Object} date - Dateオブジェクト\r\n   * @returns yyyy-mm-dd形式の文字列\r\n   */\r\n  static formatDate(date) {\r\n    return date.getFullYear() + \"-\" + \r\n              this.zeroPadding((date.getMonth() + 1),2) + \"-\" + \r\n              this.zeroPadding(date.getDate(),2);\r\n  }\r\n\r\n  /**\r\n   * 現在時刻の文字列\r\n   * @returns 現在時刻のyyyy-mm-dd形式文字列 \r\n   */\r\n  static nowString() {\r\n    return this.formatDate(new Date());\r\n  }\r\n\r\n  /**\r\n   * ゼロパティング\r\n   * @param {number} num - 対象数値\r\n   * @param {number} len - 長さ\r\n   * @returns numをlenで０埋めした文字列\r\n   */\r\n  static zeroPadding(num,len) {\r\n    return ( Array(len).join(\"0\") + num ).slice(-1 * len);\r\n  }\r\n\r\n  /**\r\n   * Glob(文字列検索)\r\n   * <pre>\r\n   * 対象文字列が\"*\"を有するパターンとマッチングするかを判定\r\n   * eg.)\r\n   * \"*\"/match , /test/match -> true\r\n   * </pre>\r\n   * @param {string} pattern - 検索パターン\r\n   * @param {string} v - 対象文字列\r\n   * @returns マッチする場合true\r\n   */\r\n  static matchStringGlob(pattern,v) {\r\n\r\n    let strs = pattern.split(\"*\")\r\n\r\n    if ( strs.length === 1 ) {\r\n      if ( pattern === v ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    let idx = 0;\r\n    for (let i = 0; i < strs.length; i++ ) {\r\n      let key = strs[i];\r\n      if ( key === \"\" ) {\r\n        continue;\r\n      }\r\n      let p = v.indexOf(key);\r\n      if ( idx <= p ) {\r\n        idx = p + key.length;\r\n      } else {\r\n          return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * パターン検索\r\n   * <pre>\r\n   * パターン文字列の配列と対象文字列がマッチするかを判定\r\n   * </pre> \r\n   * @param {string} val 対象文字列\r\n   * @param {Array} patterns パターン配列\r\n   * @returns マッチするパターンが存在する場合、true\r\n   */\r\n  static match(val,patterns) {\r\n\r\n    if ( !Array.isArray(patterns) ) {\r\n        return undefined;\r\n    }\r\n\r\n    for (let i = 0; i < patterns.length; i++ ) {\r\n      let key = patterns[i];\r\n      if ( this.matchStringGlob(key,val) ) {\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Util;","/**\r\n * @fileoverview \r\n * 選択用のコンポーネントファイル\r\n */\r\nimport React from \"react\";\r\n\r\n/**\r\n * 選択コンポーネント\r\n * @example\r\n * <Select value=\"1\" values={[1,2,3,4]}/>\r\n */\r\nclass Select extends React.Component {\r\n\r\n  /**\r\n   * 選択時イベント\r\n   * @param {Event} e - 値変更イベント \r\n   */\r\n  handleChange = (e) => {\r\n    var idx = e.target.selectedIndex;\r\n    var val = e.target.options[idx];\r\n    if (this.props.onChange !== undefined) {\r\n      this.props.onChange(val.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * <pre>\r\n   * 指定されたvalue,valuesにより、表示と選択値の取得を行う\r\n   * </pre>\r\n   * @returns selectタグ\r\n   */\r\n  render() {\r\n\r\n    let vals = this.props.values;\r\n    if (vals === undefined || vals === null) {\r\n      vals = [];\r\n    }\r\n\r\n    let clazz = \"form-select\";\r\n    if (this.props.className !== undefined) {\r\n      clazz += \" \" + this.props.className;\r\n    }\r\n\r\n    var optionList = []\r\n    if (Array.isArray(vals)) {\r\n      vals.map((text, key) => {\r\n        optionList.push(<option value={key} key={key}>{text}</option>)\r\n        return true;\r\n      })\r\n    } else if ((typeof vals) == \"object\") {\r\n      for (let key in vals) {\r\n        optionList.push(<option value={key} key={key}>{vals[key]}</option>)\r\n      }\r\n    } else {\r\n      return (<>\r\n        SelectTag values is not array\r\n      </>)\r\n    }\r\n\r\n    return (<>\r\n      <select\r\n        className={clazz}\r\n        defaultValue={this.props.value}\r\n        onChange={this.handleChange}>\r\n        {this.props.empty &&\r\n          <option value=\"\"></option>\r\n        }\r\n        {optionList}\r\n      </select>\r\n    </>)\r\n  }\r\n}\r\n\r\nexport default Select;","/**\r\n * @fileoverview \r\n * このファイルは共通のダイアログを提供します。\r\n */\r\nimport React from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nvar inst;\r\n\r\n/**\r\n * 情報表示\r\n * @param {string} title タイトル\r\n * @param {string} message メッセージ\r\n * @returns {Promise} 押下ボタンのPromise\r\n */\r\nexport function ShowInformation(title,message) {\r\n\treturn inst.handleShow(title,message,\"information\");\r\n}\r\n/**\r\n * 問い合わせ表示\r\n * @param {string} title タイトル\r\n * @param {string} message メッセージ\r\n * @returns {Promise} 押下ボタンのPromise\r\n */\r\nexport function ShowConfirm(title,message) {\r\n\treturn inst.handleShow(title,message,\"confirm\");\r\n}\r\n\r\n/**\r\n * ダイアログクラス\r\n * <pre>\r\n * 共通的に処理を行う情報（OKのみ）、問い合わせを行うダイアログを提供する。\r\n * </pre>\r\n * @example\r\n * Layoutに埋め込んである為、通常は使用しない。\r\n * <Dialog/>\r\n */\r\nclass Dialog extends React.Component {\r\n\r\n\t/**\r\n\t * コンストラクタ\r\n\t * <pre>\r\n\t * 非表示状態で初期化\r\n\t * </pre>\r\n\t * @constructor \r\n\t * @param {object} props - 特になし\r\n\t */\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tinst = this;\r\n\t\tthis.state = {\r\n\t\t\tshow : false,\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ダイアログ表示\r\n\t * <pre>\r\n\t * 各ステータスを引数により設定し、表示状態にする\r\n\t * </pre>\r\n\t * @param {string} title タイトル\r\n\t * @param {string} message メッセージ\r\n\t * @param {string} t - ダイアログタイプ\r\n\t * @returns {Promise} Noの場合RejectするPromiseインスタンス\r\n\t */\r\n\thandleShow = (title,message,t) => {\r\n\t\tlet rtn = new Promise((resolve,reject) => {\r\n\t\t  this.setState({\r\n\t\t\t  promise : {\r\n\t\t\t\t  resolve : resolve,\r\n\t\t\t\t  reject : reject,\r\n\t\t\t  },\r\n\t\t\t  type:t,\r\n\t\t\t  title:title,\r\n\t\t\t  message:message,\r\n\t\t\t  show:true,\r\n\t\t  });\r\n\t\t})\r\n\t\treturn rtn;\r\n\t}\r\n\r\n\t/**\r\n\t * 否定イベント\r\n\t * <pre>\r\n\t * No側を押した場合に発生Promiseのrejectを行い、非表示にする\r\n\t * </pre>\r\n\t */\r\n\thandleClose = () => {\r\n\t\tthis.state.promise.reject();\r\n\t\tthis.setState({show:false})\r\n\t}\r\n\r\n\t/**\r\n\t * 肯定イベント \r\n\t * <pre>\r\n\t * Yes側を押した場合に発生。Promiseをresolve()する\r\n\t * </pre>\r\n\t */\r\n\thandleYes = () => {\r\n\t\tthis.state.promise.resolve();\r\n\t\tthis.handleClose();\r\n\t}\r\n\r\n\t/**\r\n\t * レンダリング\r\n\t * <pre>\r\n\t * BootstrapのModalを設定\r\n\t * state.titleがタイトル、state.messageに表示文言\r\n\t * state.typeにより、情報、選択の指定、\r\n\t * state.showにより表示を切り替える。\r\n\t * </pre>\r\n\t * @returns Modalタグ\r\n\t */\r\n\trender = () => {\r\n\t  return (<>\r\n<Modal show={this.state.show} onHide={this.handleClose} centered>\r\n\r\n  <Modal.Header closeButton>\r\n\t  <Modal.Title>{this.state.title}</Modal.Title>\r\n  </Modal.Header>\r\n\t  <Modal.Body>{this.state.message}</Modal.Body>\r\n  <Modal.Footer>\r\n\r\n\t{ this.state.type === \"information\" &&\r\n    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n\t\tとじる\r\n    </Button>\r\n\t}\t\r\n\r\n\t{ this.state.type === \"confirm\" &&\r\n\t<>\r\n    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n\t\tいいえ\r\n    </Button>\r\n    <Button variant=\"primary\" onClick={this.handleYes}>\r\n\t\tはい\r\n    </Button>\r\n\t</>\r\n\t}\r\n  </Modal.Footer>\r\n</Modal>\r\n\t\t</>\r\n\t)\r\n  }\r\n}  \r\n\r\nexport default Dialog;"],"sourceRoot":""}